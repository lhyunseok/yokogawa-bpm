<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="Default">136ea22f471e0210d254bce5536d4397</macroponent>
        <name>02_grid_1/columnsLayout</name>
        <preset/>
        <required_translations>[
    
]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {TransformApiHelpers} params.helpers
 */
function evaluateProperty({
    api,
    helpers
}) {

    var today = new Date(); // 현재 날짜 객체 생성
    var year = today.getFullYear(); // 현재 년도 추출
    var baseMonth = today.getMonth() +1; // 현재 월 추출 (주의: JavaScript에서 월은 0부터 시작하기 때문에 +1 해야 함)
    // 18개월 배열 생성
    var months = [];
    for (var i = 0; i < 18; i++) {
        var month = baseMonth + i; // 현재 월부터 시작하여 18개월까지 차례대로 계산
        var yearToSet = year; // 년도 설정

        // 12월을 넘어가는 경우 다음 해로 넘어가도록 처리
        if (month > 12) {
            month -= 12;
            yearToSet += 1;
        }

        // 2024년-05, 2024-06 ... 형식으로 변환하여 배열에 저장
        months.push(`${yearToSet}-${month.toString().padStart(2, '0')}`);
    }
    //'wbs,wbs_description,month1,month2,month3,month4,month5,month6'
    console.log(months); // 결과 출력: ["2024-05", "2024-06", "2024-07", "2024-08", "2024-09", ...]

    // myarr 배열에 arr 배열의 모든 정보를 추가하는 코드

    var arr = [];

    var real = {
        "columnInfo": {
            "width": 100,
            "header": {
                "text": 'WBS'
            }
        },
        "layoutInfo": {
            "width": 100,
            "column": 'wbs'
        }
    };
    // var real2 = {
    //     "columnInfo": {
    //         "width": 150,
    //         "header": {
    //             "text": 'WBS Desc'
    //         }
    //     },
    //     "layoutInfo": {
    //         "width": 150,
    //         "column": 'wbs_description'
    //     }
    // };
    arr.push(real);
    // arr.push(real2);

    // 새로운 개체를 생성합니다.
    // const newObj = {
    //     "columnInfo": {
    //         "header": {
    //             "text": "ccc"
    //         }
    //     },
    //     "layoutInfo": {
    //         "column": "month3"
    //     }
    // };

    // push() 메서드를 사용하여 배열에 새로운 개체를 추가합니다.
    // arr.push(newObj);

    // console.log(arr);

    for (let i = 0; i < months.length; i++) {
        const newObj = {
            "columnInfo": {
                "width": 100,
                "header": {
                    "text": months[i]
                }
            },
            "layoutInfo": {
                "width": 100,
                "column": `month${i + 1}`
            }
        };

        arr.push(newObj);
    }

    var real3 = {
        "columnInfo": {
            "width": 100,
            "header": {
                "text": 'Beyond 18'
            }
        },
        "layoutInfo": {
            "width": 100,
            "column": 'beyond18'
        }
    };

    arr.push(real3);

        var real4 = {
        "columnInfo": {
            "width": 100,
            "header": {
                "text": 'Forecast PTC'
            }
        },
        "layoutInfo": {
            "width": 100,
            "column": 'forecase_ptc'
        }
    };

    arr.push(real4);

    var real5 = {
        "columnInfo": {
            "width": 100,
            "header": {
                "text": 'Variance'
            }
        },
        "layoutInfo": {
            "width": 100,
            "column": 'variance'
        }
    };

    arr.push(real5);


    //   const newColumnInfo = {
    //     "header": {
    //       "text": months[i]
    //     },
    //     "layoutInfo": {
    //       "column": `month${i + 1}`,
    //       "visible": true
    //     }
    //   };

    //   myarr.push({
    //     "columnInfo": newColumnInfo,
    //     "layoutInfo": {
    //       "column": `month${i + 1}`,
    //       "visible": true
    //     }
    //   });
    // }


    return arr;
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-05-29 14:58:04</sys_created_on>
        <sys_id>3129b95c472a0610d254bce5536d430c</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>02_grid_1/columnsLayout</sys_name>
        <sys_package display_value="BPM" source="x_yergb_bpm">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_package>
        <sys_policy/>
        <sys_scope display_value="BPM">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_scope>
        <sys_update_name>sys_ux_client_script_3129b95c472a0610d254bce5536d430c</sys_update_name>
        <sys_updated_by>hahyun@sorin.co.kr</sys_updated_by>
        <sys_updated_on>2024-05-31 07:35:48</sys_updated_on>
        <target>macroponent</target>
        <type>transform</type>
    </sys_ux_client_script>
</record_update>
