<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $rootScope, $window, $location, $window) {

  var c = this;
  c.data.gridBtnType = '';

  c.getUrlParameter = function(param) {
      return $location.search()[param];
  };

  var paramValue = c.getUrlParameter('sys_id');
  c.data.paramValue = paramValue;

  $scope.btnClickComplete = function() {
      c.data.operation = 'updateState';
      c.server.update().then(function(response) {
          console.log('Server response:', response);
          location.reload();
      }).catch(function(error) {
          console.error('Error updating state:', error);
          alert('Error updating state');
      });
  };

  // Function to save a single field
  $scope.saveField = function(fieldName, fieldValue) {
      if (!fieldValue) {
          alert('Field value cannot be empty');
          return;
      }
      c.data.operation = 'saveField';

    
         c.data.gridBtnTransact = 'T';
          c.data.gridDetailData = dpDetail.getJsonRows();
          for (var x = 0; x < c.data.gridDetailData.length; x++) {
              console.log(c.data.gridDetailData[x])
              c.data.gridDetailData[x].rowStat = dpDetail.getRowState(x);
          }
    
    
      c.server.update().then(function(response) {
          location.reload();
      }).catch(function(error) {
          console.error('Error saving field:', error);
          alert('Error saving field');
      });
    
    
    
    
    
  };

  $window.addEventListener('message', function(event) {
      if (event.data.type === 'updateIframeSrc') {
          location.reload();
          //var iframe = document.getElementById('myIframe');
          // iframe.src = event.data.newSrc;
          // console.log('Iframe src updated to:', event.data.newSrc);
      }
  });

  // Function to handle click event
  $scope.handleClick = function() {
      if (c.data.rfq_entry_id) {
          window.location.href = "/ybpm?id=rfqentry&table=x_yergb_bpm_rfq_entry&sys_id=" + c.data.rfq_entry_id; // Redirect to the URL
      } else {
          alert('no rfq record')
      }
  };

  // Function to dynamically adjust iframe height
  function resizeIframe() {
      var iframe = document.getElementById('myIframe');
      if (iframe) {
          var windowHeight = window.innerHeight;
          iframe.style.height = Math.max(windowHeight * 0.45, 200) + 'px';
      }
  }

  // Add event listener to resize iframe when content loads
  $window.onload = function() {
      resizeIframe();
      //initGrid();
  };

  // Add event listener to window resize event
  $window.addEventListener('resize', function() {
      resizeIframe();
  });

  // Call resizeIframe on initial load to set the initial height
  resizeIframe();

  function checkRealGrid() {
      if (RealGrid) {
          return true;
      }

      return false;
  }

  function drawRealGrid() {
      containerDetail = document.getElementById('gridContainer');
      dpDetail = new RealGrid.LocalDataProvider(false);
      gvDetail = new RealGrid.GridView(containerDetail);
      gvDetail.setDataSource(dpDetail);

      dpDetail.setFields([
          {fieldName: 'sys_id',  dataType:  'text'},
          {fieldName: 'number',  dataType:  'text'},
          {fieldName: 'wbs_6',  dataType:  'text'},
          {fieldName: 'ms_code',  dataType:  'text'},
          {fieldName: 'description',  dataType:  'text'},
          {fieldName: 'quantity',  dataType:  'number'},
          {fieldName: 'unit_price',  dataType:  'number'},
          {fieldName: 'extended_price',  dataType:  'number'},
          {fieldName: 'unit_cost',  dataType:  'number'},
          {fieldName: 'extended_cost',  dataType:  'number'},
          {fieldName: 'unit_mp',  dataType:  'number'},
          {fieldName: 'mp_amount',  dataType:  'number'},
          {fieldName: 'vendor',  dataType:  'text'},
          {fieldName: 'quotation',  dataType:  'text'}
      ]);

      gvDetail.setColumns([{
              "name": "sys_id",
              "fieldName": "sys_id",
              "type": "data",
              "width": 0,
              "header": {
                  "text": "sysid",
              },
              "visible" : false,
				"styleName" : "left-column"

          },
          {
              "name": "number",
              "fieldName": "number",
              "type": "data",
              "width": 100,
              "header": {
                  "text": "Number"
              },
            "visible" : false,
				"styleName" : "left-column"

          },
          {
              "name": "wbs_6",
              "fieldName": "wbs_6",
              "type": "data",
              "width": 100,
              "header": {
                  "text": "WBS 6"
              },
						"styleName" : "left-column"
          },
          {
              "name": "ms_code",
              "fieldName": "ms_code",
              "type": "data",
              "width": 100,
              "header": {
                  "text": "MS Code"
              },
						"styleName" : "left-column"
          },
          {
              "name": "description",
              "fieldName": "description",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Description"
              },
						"styleName" : "left-column"
          },
          {
              "name": "quantity",
              "fieldName": "quantity",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Quantity"
              },
						"styleName" : "right-column"
          },
          {
              "name": "unit_price",
              "fieldName": "unit_price",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Unit Price"
              },
						"styleName" : "right-column"
          },
          {
              "name": "extended_price",
              "fieldName": "extended_price",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Extended Price"
              },
						"styleName" : "right-column"
          },
          {
              "name": "unit_cost",
              "fieldName": "unit_cost",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Unit Cost"
              },
						"styleName" : "right-column"
          },
          {
              "name": "extended_cost",
              "fieldName": "extended_cost",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Extended Cost"
              },
						"styleName" : "right-column"
          },
          {
              "name": "unit_mp",
              "fieldName": "unit_mp",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Unit MP"
              },
						"styleName" : "right-column"
          },
          {
              "name": "mp_amount",
              "fieldName": "mp_amount",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "MP Amount"
              },
						"styleName" : "right-column"
          },
          {
              "name": "vendor",
              "fieldName": "vendor",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "Vendor"
              },
						"styleName" : "left-column"
          },
          {
              "name": "quotation",
              "fieldName": "quotation",
              "type": "data",
              "width": 120,
              "header": {
                  "text": "quotation"
              },
              "visible" : false
          }
      ]);

      gvDetail.setColumnLayout([
          'sys_id',
          'number',
          'wbs_6',
          'ms_code',
          'description',
          'quantity',
          'unit_price',
          'extended_price',
          'unit_cost',
          'extended_cost',
          'unit_mp',
          'mp_amount',
          'vendor',
          'quotation'
      ]);

      gvDetail.footers.visible = false;
      gvDetail.commitEditor();
      gvDetail.undoable = true;
      gvDetail.editOptions.commitByCell = true;		
      gvDetail.editOptions.insertable = true;
      dpDetail.softDeleting = true;
      gvDetail.displayOptions.fitStyle = "evenFill";
      gvDetail.setPasteOptions({enabled: true , enableAppend:true, eventEachRow	:true, commitEdit	:true});
			gvDetail.header.height = 40;
			gvDetail.displayOptions.rowHeight = 30;
		
			gvDetail.displayOptions.columnMovable = false;
 

      //gvDetail.checkBar.visible = false;
      //gvDetail.stateBar.visible = false;

      dpDetail.setRows(c.data.gridDetailData);
  }

  $scope.gridDetailBtnClick = function(idx) {
      var v = {
          'rowStat': '',
          'sys_id': '',
          'number': '',
          'wbs_6': '',
          'ms_code': '',
          'description': '',
          'quantity': '',
          'unit_price': '',
          'extended_price': '',
          'unit_cost': '',
          'extended_cost': '',
          'unit_mp': '',
          'mp_amount': '',
          'vendor': '',
          'quotation': paramValue
      }

      c.data.gridBtnType = '';
      if (idx == 1) {
          c.data.gridBtnType = 'add';
          //alert("1")
          dpDetail.addRow(v);
      } else if (idx == 2) {
         var curr = gvDetail.getCurrent();
        dpDetail.removeRow(curr.dataRow);
        

      } else if (idx == 3) {
          alert("3")

          c.data.gridBtnTransact = 'T';
          c.data.gridDetailData = dpDetail.getJsonRows();
          for (var x = 0; x < c.data.gridDetailData.length; x++) {
              c.data.gridDetailData[x].rowStat = dpDetail.getRowState(x);
          }
      }



      console.log(dpDetail.getRowCount());


      c.server.update().then(function(response) {
          console.log('Server response:', response);
      });
  }

     // Create New
  $scope.btnClickNew = function(fieldName, fieldValue) {

      c.data.operation = 'createNew';
      c.server.update().then(function(response) {
            window.location.href = "/ybpm?id=quotation&table=x_yergb_bpm_quotation&sys_id=" + c.data.redirect_sys_id;
      }).catch(function(error) {
          console.error('Error saving field:', error);
          alert('Error saving field');
      });
  };


  c.server.update().then(function(response) {


      var loopCnt = 0;
      var timerid = setInterval(function() {
          loopCnt = loopCnt + 1;
          if (loopCnt > 30) {
              clearTimeout(timerid);
              alert('Can not load REALGRID');
          }

          if (checkRealGrid()) {
              clearTimeout(timerid);
              drawRealGrid();
          }
      }, 100);

      //$scope.serviceCall = testService.showResult();
      //console.log("$scope.serviceCall: "+$scope.serviceCall);
  });



};]]></client_script>
        <controller_as>c</controller_as>
        <css>@charset "UTF-8";


body {margin: 0; font-family: "Pretendard"; font-size: 14px; font-weight: 400; line-height: normal;}

ul {margin: 0; padding: 0;}
ul li {list-style: none; margin: 0; padding: 0;}
a {text-decoration: none;}
.blank {width: 100%; padding: 6px 10px 5px 10px; max-height: 28px; width: calc(100%); }
.yoko-container {margin: 40px auto 100px; min-width: 1400px; max-width: 1600px; font-family: "Pretendard"; font-size: 14px; font-weight: 400; letter-spacing: 0;}
.yoko-container * {box-sizing: border-box;}
.yoko-container .yoko-content {display: flex; gap: 30px; flex-direction: column;}
.yoko-breadcrumb {color: #425D78;}
.yoko-title-btn-wrap {display: flex; justify-content: space-between; align-items: center; margin: 8px 0 25px 0;}
.yoko-title-btn-wrap .yoko-title {margin:0; color: #1C3956; font-family: "Pretendard";font-size: 24px;  font-style: normal;  font-weight: 700; line-height: normal;}
.yoko-title-btn-wrap .yoko-btn-wrap {display: flex; gap: 4px; margin-bottom: 0;}

.yoko-btn-wrap {display: flex; justify-content: space-between; margin-bottom: 8px;}
.yoko-btn-wrap &gt; div {display: flex; gap: 4px;}

.yoko-btn {cursor: pointer; border-radius: 4px; text-align: center; font-family: "Pretendard";font-size: 14px;  font-style: normal; font-weight: 400;  padding: 8px 20px 8px 20px;}
.yoko-btn:disabled  {border: 1px solid #AABBD1; color: #C8CED4;}

.yoko-btn.yoko-btn-outline {background: #fff; border: 1px solid #B2B2B2;  color: #4B5E70; }
.yoko-btn.yoko-btn-outline:hover  {border: 1px solid #AABBD1;}

.yoko-btn.yoko-btn-fill {background-color: #68B3FC; border: 1px solid #4193E2; color: #fff;}
.yoko-btn.yoko-btn-fill:hover  {background-color: #4193E2; border: 1px solid #4193E2;}

.yoko-btn.yoko-btn-fill-red {background-color: #FF6D6D; border: 1px solid #E35050; color: #fff;}
.yoko-btn.yoko-btn-fill-red:hover  {background-color: #E35050; border: 1px solid #E35050;}


.yoko-btn-search {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_search.png) no-repeat center center !important;}
.yoko-btn-search:hover {background-color: #eaeaea;}
.yoko-btn-add {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_add.png) no-repeat center center !important;}
.yoko-btn-add:hover {background-color: #eaeaea;}
.yoko-btn-delete {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_delete.png) no-repeat center center !important;}
.yoko-btn-delete:hover {background-color: #eaeaea;}
.yoko-btn-info-fill {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_info_fill.png) no-repeat center center !important;}
.yoko-btn-info-fill:hover {background-color: #eaeaea;}
.yoko-btn-attach {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_attach.png) no-repeat center center !important;}
.yoko-btn-attach:hover {background-color: #eaeaea;}
.yoko-btn-load {border: 1px solid #4193E2; font-weight: 400; padding: 0; min-width: 58px; width: 28px; height: 28px; color: #fff; background-color: #68B3FC;}
.yoko-btn-load:hover {background-color: #4193E2; border: 1px solid #4193E2;}
.yoko-btn-fold {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_arrow_fold.png) no-repeat center center !important;}
.yoko-btn-fold:hover {background-color: #eaeaea;}
.yoko-btn-fold.active {background:#fff url(icon_arrow_unfold.png) no-repeat center center !important;}


.yoko-search-form {display: flex; gap: 30px; padding: 16px 30px; max-width: 1600px;  background-color: #F7F7F7; border: 1px solid #B2B2B2; border-radius: 4px;}

.yoko-fold-btn-wrap {display: flex; align-items: center; gap: 10px;}

.yoko-form-group .yoko-btn {padding: 5px 10px 5px 10px;}
.yoko-search-form .yoko-form-group {display: flex; align-items: center; gap: 20px; /*width: 100%; min-width: 240px;*/}
.yoko-search-form .yoko-form-group label {width:130px; min-width: 130px; text-align: right;}
.yoko-search-form label {color: #1F3B55; font-family: 'Pretendard'; font-size: 14px; font-style: normal; font-weight: 500; line-height: normal;}
.yoko-search-form label.yoko-short {width: 80px; min-width: 80px;}
.yoko-search-form label.yoko-short-90 {width: 90px; min-width: 100px;}
.yoko-search-form label.yoko-short-100 {width: 100px; min-width: 100px;}
.yoko-search-form label.yoko-short-110 {width: 110px; min-width: 110px;}
.yoko-search-form label.yoko-short-120 {width: 120px; min-width: 120px;}
.yoko-search-form label.yoko-short-130 {width: 130px; min-width: 130px;}
.yoko-search-form label.yoko-short-135 {width: 135px; min-width: 130px;}
.yoko-search-form label.yoko-short-142 {width: 142px; min-width: 130px;}
.yoko-search-form label.yoko-middle {width: 170px; min-width: 170px;}
.yoko-search-form label.yoko-long {width: 200px; min-width: 200px;}
.yoko-search-form label.yoko-btn-fill {background-color: #68B3FC;text-align: center; color: #fff; font-weight: 400;  padding: 5px 10px 6px 10px; border-radius: 4px;}
.yoko-search-form label.yoko-long.yoko-btn-fill {width: calc(200px - 10px);}
.yoko-search-form label.yoko-middle.yoko-btn-fill {width: calc(170px - 10px);}

.yoko-search-form input,
.yoko-search-form select,
.yoko-search-form textarea {font-family: "Pretendard"; font-size: 14px; padding: 6px 10px 5px 10px; max-height: 28px; width: calc(100%); border-radius: 4px; border: 1px solid #B2B2B2; color: #7A8692;}
.yoko-search-form textarea {max-height: none; width: 100%; padding: 10px 10px 10px 10px; }
/* .yoko-search-form input[type=date] {width: 140px; } */
.yoko-search-form input[type=date]::-webkit-calendar-picker-indicator,
.yoko-search-form input[type=date]::-webkit-inner-spin-button {background: url('icon_calendar.png') no-repeat right center; }

.yoko-search-form select {
  -moz-appearance:none; /* Firefox */
  -webkit-appearance:none; /* Safari and Chrome */
  appearance:none;
  background-image: url(icon_arrow_down.png);
  background-repeat: no-repeat;
  background-position-x: 100%;
  background-position-y: 1px;
  line-height: 15px;
  padding: 6px 30px 5px 10px;

}

.yoko-form-inline {display: flex;gap: 4px; width: calc(100% - 4px); align-items: center;}
.yoko-form-group-title {padding: 4px 0 8px 0; color: #1C3956; font-family: "Pretendard"; font-size: 14px;font-style: normal;font-weight: 700; line-height: normal;}
.yoko-form-group-hori  {display: flex;gap: 0; /*width:100%;*/}
.yoko-flex-responsive {display: flex; gap: 30px;}
.yoko-form-col {/*width: 100%;*/ display: flex; gap: 8px; flex-direction: column;}
.yoko-form-col.yoko-gap7 {gap:7px ;}
.yoko-col100 {width: 100%;}
.yoko-col60 {width: 60%;}
.yoko-col50 {width: 50%;}
.yoko-col40 {width: 40%}
.yoko-col35 {width: 35%}
.yoko-col30 {width: 30%}
.yoko-col20 {width: 20%} 
.yoko-col15 {width: 15%} 
.yoko-col10 {width: 10%} 

.yoko-search-form label.checkbox-label {text-align: left;width: auto; min-width: auto; cursor: pointer; display: flex; gap: 10px; align-items: flex-start; justify-content: flex-start; color: #1F3B55; font-family: "Pretendard";  font-size: 14px; font-style: normal; font-weight: 400; line-height: normal;}
.custom-checkbox {position: relative;}
.custom-checkbox input { position: absolute;  opacity: 0;  cursor: pointer;  width: 18px; height: 18px; z-index: 1;}
.custom-checkbox .checkmark {position: relative;  top: 0;  left: 0;  display: block;  height: 18px;  width: 18px;  border-radius: 2px;border: 1px solid #DCE3EB;background: #FFF; overflow: hidden;}
.custom-checkbox:hover input ~ .checkmark {background-color: #FFF;}
.custom-checkbox input:checked ~ .checkmark {  background-color: #68B3FC;  border-radius: 2px;  border: 1px solid #68B3FC;}
.custom-checkbox .checkmark:after {  content: "";  position: absolute;  display: none;}
.custom-checkbox input:checked ~ .checkmark:after {  display: block;  left: 50%; top: 50%;  height: 16px;  width: 18px;  transform: translate(-50%, -50%);  background: url(icon_checkbox.png) no-repeat center center;}

.custom-checkbox input:disabled ~ .checkmark {border: 1px solid #D1D1D1; background: #E2E2E2; cursor: not-allowed; }
.custom-checkbox input:checked:disabled ~ .checkmark {background:#E2E2E2 url(icon_checkbox_dis.png) no-repeat center center; }
.custom-checkbox input:disabled ~ .checkmark:after {background: url(icon_checkbox_dis.png) no-repeat center center;}

.yoko-wid100 {width: 100px !important;}
.yoko-wid103 {width: 103px !important;}
.yoko-wid127 {width: 127px !important;}
.yoko-wid134 {width: 134px !important;}
.yoko-wid140 {width: 140px !important;}
.yoko-wid147 {width: 147px !important;}
.yoko-wid154 {width: 154px !important;}
.yoko-wid158 {width: 158px !important;}
.yoko-wid172 {width: 172px !important;}
.yoko-wid247 {width: 247px !important;}
.yoko-wid308 {width: 308px !important;}
.yoko-wid425 {width: 425px !important;}
.yoko-wid559 {width: 559px !important;}
.yoko-wid717 {width: 717px !important;}

.yoko-ht100 {height: 100px !important;}
.yoko-ht200 {height: 200px !important;}

.yoko-mt-20 {margin-top: 20px;}
.yoko-mb-80 {margin-bottom: 80px;}

.yoko-padding-r20 {padding: 16px 20px 16px 30px;}
.yoko-scroll {padding-right: 15px;}
/* .yoko-form-inline select {width: calc(100% - 28px);} */
.yoko-btn-spacing {width: calc(100% - 32px);}
.yoko-text-right {text-align: right;}

.yoko-search-form-wrapper {display: flex; gap: 20px; }
.yoko-search-form-wrap .yoko-search-form-heading {margin-top: 10px; margin-bottom: 5px; font-size: 16px; font-weight: 600; color: #1F3B55;}

.yoko-governance-wrap .yoko-search-form button {width: 100%; min-width: 140px;}
.yoko-project-wrap .yoko-search-form input[type=text] {width: 100%;}

.yoko-form-group-heading-wrap {display: flex; gap: 9px; justify-content: space-between; align-items: center;}
.yoko-form-group-heading {font-size: 14px; font-weight: 700; color: #1F3B55;}
.yoko-form-group-line {flex-grow: 1; height: 1px; background-color: #E1E1E1;}
.yoko-padding24 {padding: 24px;}
.yoko-grid-btn-wrap {display: flex; gap: 7px; justify-content: right;}

.yoko-project-wrap {height: 255px;}
.yoko-project-wrap .yoko-search-form {height: 100%;}
.yoko-middle-text {width: 10px; text-align: center; color: #4B5E70;}

/* 헤더 */
.yoko-header-container {width: 100%; height: 59px; background-color: #00488D;}
.yoko-header-inner {margin: 0 auto; padding: 8px 30px 8px 16px; max-width: 1920px; min-width: 1280px;}
.yoko-nav-wrap {display: flex; align-items: center; gap: 97px;}
.yoko-nav ul {display: flex; gap: 60px;}
.yoko-menu a {display: block; height: 43px; line-height: 43px; font-size: 14px; font-weight: 600; color: #fff;}
.yoko-depth-arrow {position: relative;}
.yoko-depth-arrow::after {content: ''; display: block; width: 7px; height: 4px; background: url(icon_header_arrow.svg) no-repeat center center; background-size: contain; position: absolute; top: 50%; right: -12px; transform: translateY(-50%);}
.yoko-header-right {display: flex; margin-left: auto; align-items: center; gap: 24px;}
.yoko-header-icon-wrap {display: flex; align-items: center; gap: 15px;}
.yoko-header-user {display: flex; justify-content: center; align-items: center; width: 35px; height: 35px; border-radius: 50%; background-color: #fff; overflow: hidden;}
.yoko-header-search {display: flex; align-items: center;}
.yoko-header-search input {padding: 8px 10px; width: 156px; font-size: 14px; border: none; border-radius: 4px 0 0 4px; outline: none;}
.yoko-header-search input::placeholder {color: #A7B9CA;}
.yoko-header-search .yoko-arrow button {border: none; background-color: none; display: flex; align-items: center; width: 34px; height: 32px; background-color: #fff; border-radius: 0 4px 4px 0; cursor: pointer;}


.yoko-nav ul.yoko-depth {display: none; position: absolute; background-color: #fff; padding: 20px 16px; width: 267px; height: auto; border-radius: 4px; border: 1px solid #00488D; box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.05);}
.yoko-nav ul.yoko-depth a {font-size: 14px; font-weight: 500; color: #425D78;}
.yoko-nav ul.yoko-dep-2-wrap {display: none; flex-direction: column; padding: 14px 12px; gap: 0; background-color: #F6F6F6;}
.yoko-nav .yoko-dep-1 &gt; a {position: relative; padding: 0 12px;}
.yoko-nav .yoko-dep-1 &gt; a::after {content: ''; display: block; width: 24px; height: 24px; background: url(icon_arrow_search.svg) no-repeat center center; background-size: contain; position: absolute; top: 50%; right: 5px; transform: translateY(-50%);}
.yoko-nav .yoko-dep-1 &gt; a.rotate::after {transform: rotate(180deg) translateY(50%);}
.yoko-nav .yoko-dep-1 &gt; a:hover {background-color: #ececec;}
.yoko-nav .yoko-dep-2 &gt; a {padding: 0 12px;}
.yoko-nav .yoko-dep-2 &gt; a:hover {background-color: #fff;}












/* 모달창 */
.yoko-modal-normal {padding: 32px 30px; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 768px; height: 240px; background-color: #fff; box-shadow: 0px 2px 30px rgba(0, 0, 0, 0.1); z-index: 100;}
.yoko-modal-content {position: relative; width: 100%; height: 100%;}
.yoko-modal-content .yoko-btn-wrap {position: absolute; top: 0; right: 0;}
.yoko-modal-content .yoko-btn-group {margin-top: 32px;}
.yoko-modal-content .yoko-btn-group button {padding: 8px 20px;}
.yoko-modal-content .yoko-btn-wrap button {padding: 6px 10px;}

/* 테이블 형식 */
.yoko-search-table input,
.yoko-search-table select,
.yoko-search-table textarea {font-family: "Pretendard"; font-size: 13px; padding: 6px 10px 5px 10px; max-height: 28px; width: calc(100%); border-radius: 4px; border: 1px solid #E1E8F0; color: #7A8692;}
.yoko-search-table textarea {max-height: none; width: 100%; padding: 10px 10px 10px 10px; }
.yoko-search-table input[type=date]::-webkit-calendar-picker-indicator,
.yoko-search-table input[type=date]::-webkit-inner-spin-button {background: url('icon_calendar.png') no-repeat right center; }

.yoko-search-table select {
  -moz-appearance:none; /* Firefox */
  -webkit-appearance:none; /* Safari and Chrome */
  appearance:none;
  background-image: url(icon_arrow_down.png);
  background-repeat: no-repeat;
  background-position-x: 100%;
  background-position-y: 1px;
  line-height: 15px;
  padding: 6px 30px 5px 10px;
}

.yoko-search-table-wrap {display: flex; gap: 0;}
.yoko-search-table tr.yoko-height-short {height: 39px;} 
.yoko-search-table {border-spacing: 0; border-collapse: collapse;}
.yoko-search-table tr th {padding-right: 16px; text-align: right; background-color: #F7F7F7; border-top: 1px solid #EDEDED; border-bottom: 1px solid #EDEDED;}
.yoko-search-table tr th.yoko-bg-none {background-color: #fff;}
.yoko-search-table tr th label {color: #4B5E70; font-family: 'Pretendard'; font-size: 13px; font-style: normal; font-weight: 500; line-height: normal;}
.yoko-search-table tr td {padding: 5px 10px; border-top: 1px solid #EDEDED; border-bottom: 1px solid #EDEDED;}
.yoko-search-table tr td input {padding: 5px 10px; width: 100%; height: 100%;}
.yoko-search-table tr td input:disabled {border: 1px solid #E1E8F0; background: #F1F1F1;}
.yoko-search-table .yoko-form-inline {width: 100%;}

.yoko-search-table-wrapper {display: flex; gap: 30px;}
.yoko-search-table-heading {margin-top: 12px; margin-bottom: 5px; font-size: 16px; font-weight: 600; color: #1F3B55;}
.yoko-table-heading {text-align: left !important; font-size: 14px; font-weight: 700; color: #1F3B55;}
.yoko-search-table.yoko-empty-col {flex: 1;}






@media (max-width: 1719px) {
  .yoko-container {width: 1280px; min-width: 1280px;}
  .yoko-search-form {gap: 15px;}
  .yoko-flex-responsive {flex-direction: column; gap: 8px;}
  .yoko-flex-responsive-row {flex-direction: row; gap: 20px;}
  .yoko-search-form-company.yoko-col60 {width: 888px;}
  .yoko-search-form-company .yoko-padding24 {padding: 14px;}
  .yoko-search-form-company .yoko-search-form {gap: 7px;}
  .yoko-search-form-governance.yoko-col40 {width: 381px;}
  .yoko-project-wrap.yoko-col60 {width: 888px;}
  .yoko-project-wrap.yoko-col40 {width: 381px;}
  .yoko-project-wrap .yoko-search-form {padding: 18px;}

  .yoko-form-amount-wrap label.yoko-short {width: 130px;}
  .quotation-responsive label.yoko-short-110 {width: 142px;}
  .yoko-flag-wrap {margin-top: 15px; height: 100px !important;}
  .yoko-flag-wrap.yoko-search-form .yoko-form-group {gap: 40px;}
  .yoko-flag-wrap .yoko-flex-responsive-row {flex-direction: row; gap: 40px;}

  .yoko-nav-wrap {gap: 30px;}
  .yoko-nav ul {gap: 55px;}
}





/*리얼그리드 수정*/
/*
.rg-root {color: #4B5966 !important;  font-family: "Pretendard" !important;   font-size: 14px !important;  font-style: normal !important;  font-weight: 500 !important;  line-height: normal !important;}
.rg-grid {border: 1px solid #EAEEF3 !important;}

.rg-header {background: #FBFCFF  !important; color:#8B99A6 !important; font-weight: 600 !important; font-weight: 500 !important;}
.rg-header .rg-table tr td {border-right: 1px solid #EAEEF3 !important; border-bottom: 1px solid #EAEEF3 !important; font-weight: 500 !important;} 
.rg-head {background: #FBFCFF  !important; color:#8B99A6 !important; font-weight: 600 !important; font-weight: 500 !important;}
.rg-head .rg-table tr td { border-right: 1px solid #EAEEF3 !important;  border-bottom: 1px solid #EAEEF3 !important; font-weight: 500 !important;}

.rg-body,
.rg-fixed-body {color: #4B5966 !important;}
.rg-body .rg-table tr td, 
.rg-fixed-body .rg-table tr td {border-right: 1px solid #EAEEF3 !important;  border-bottom: 1px solid #EAEEF3 !important;}
.rg-rowbarcontainer .rg-table tr td {background-color: transparent !important;    border-right: 1px solid #EAEEF3 !important;    border-bottom: 1px solid #EAEEF3 !important;}
.rg-alternate-row {background: #fff !important;}
.rg-footer {color: #606060 !important; background: #FBFCFF  !important;}
.rg-footer .rg-table tr td {border-right: 1px solid #EAEEF3 !important;  border-top: 1px solid #EAEEF3 !important;}
.rg-foot {color: #606060 !important; background: #FBFCFF  !important;}
.rg-foot .rg-table tr td {border-right: 1px solid #EAEEF3 !important;  border-top: 1px solid #EAEEF3 !important;}
.rg-focus {border:  2px solid #68B3FC !important;}
.rg-header-focus {background: #E5F2FF !important; color: #6F7479 !important;}
.rg-header .rg-table tr td:hover {background: #68B3FC !important; color: #fff !important;}
.rg-header-select {background: rgb(232 248 240 / 50%) !important;}
.rg-selection { background: rgb(232 248 240 / 35%) !important; border: 1px solid #15BD66!important;}
.rg-editor-container { border: 2px solid #27C382 !important; }
*/

.rg-header-cell {text-align: center !important;}
.right-column { text-align: right !important;}
.left-column { text-align: left !important;}

.non-editable { background: #dddddd !important}




/* ----------------------------------------------- */
/* column style
/* ----------------------------------------------- */
.ni-rg-readonly {
  bbackground-color: hsla(0, 0%, 0%, 0.05) !important;
}
.ni-rg-required {
  background-color: hsla(0, 100%, 50%, 0.05) !important;
}
.ni-rg-readonly input[type=checkbox] {
  accent-color: hsl(24, 20%, 80%);
}

/* ----------------------------------------------- */
/* align
/* ----------------------------------------------- */

.ni-rg-align-left     { text-align: left !important; }
.ni-rg-align-right    { text-align: right !important; }
.ni-rg-align-center   { text-align: center !important; }


</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>quotationwd</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>quotationWd</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var qSysId = $sp.getParameter('sys_id');
	//gs.addInfoMessage(qSysId)
	
			// 현재 접속한 유저의 sysid 를 가져옴
            var userName = gs.getUser().getDisplayName()
            var userNameSysId = gs.getUser().getID();

           // gs.addErrorMessage("userNameSysId")
           // gs.addErrorMessage(userNameSysId)

        var gRfq = new GlideRecord("x_yergb_bpm_rfq_entry");
        var salesManager
        gRfq.addQuery('quotation', qSysId)
        gRfq.query()
        while(gRfq.next()){
            salesManager = gRfq.sales_manager
            //gs.addErrorMessage("salesManager")
            //gs.addErrorMessage(salesManager)
        }

       

	      var gr = new GlideRecord("x_yergb_bpm_quote_item");
        gr.orderBy("number");
        gr.addEncodedQuery('quotation=' + qSysId);
        gr.query();
        var gridDetailData = [];
        while (gr.next()) {
            gridDetailData.push({
                'sys_id': gr.sys_id.getDisplayValue(),
                'number': gr.number.getDisplayValue(),
                'wbs_6': gr.wbs_6.getDisplayValue(),
                'ms_code': gr.ms_code.getDisplayValue(),
                'description': gr.description.getDisplayValue(),
                'quantity': gr.quantity.getDisplayValue(),
                'unit_price': gr.unit_price.getDisplayValue(),
                'extended_price': gr.extended_price.getDisplayValue(),
                'unit_cost': gr.unit_cost.getDisplayValue(),
                'extended_cost': gr.extended_cost.getDisplayValue(),
                'unit_mp': gr.unit_mp.getDisplayValue(),
                'mp_amount': gr.mp_amount.getDisplayValue(),
                'vendor': gr.vendor.getDisplayValue(),
                'quotation': qSysId
            });
				data.gridDetailData = gridDetailData;
        }

	
        if(input && input.gridBtnTransact) {
					//gs.addErrorMessage("hihi")
					gs.addErrorMessage(input.gridBtnTransact)
            if(input.gridBtnTransact == 'T') {
                console.log('SERVER GRID SAVE : ' + input.gridDetailData);
                var gData = input.gridDetailData;
                for(var x=0; x<gData.length; x++) {
                    console.log('ROW STAT:' + gData[x].rowStat); 
                    gs.addErrorMessage('ROW STAT:' + gData[x].rowStat); 
                    var ordItem = new GlideRecord('x_yergb_bpm_quote_item');
                    ordItem.initialize();
                    var rStat = gData[x].rowStat;
                    if(rStat == 'deleted') {
                        ordItem.get(gData[x].sys_id);
                        ordItem.deleteRecord();
                    } else if(rStat == 'updated') {
                        ordItem.get(gData[x].sys_id);
                        ordItem.setValue('wbs_6', gData[x].wbs_6);
                        ordItem.setValue('ms_code', gData[x].ms_code);
                        ordItem.setValue('description', gData[x].description);
                        ordItem.setValue('quantity', gData[x].quantity);
                        ordItem.setValue('unit_price', gData[x].unit_price);
                        ordItem.setValue('extended_price', gData[x].extended_price);
                        ordItem.setValue('unit_cost', gData[x].unit_cost);
                        ordItem.setValue('extended_cost', gData[x].extended_cost);
                        ordItem.setValue('unit_mp', gData[x].unit_mp);
                        ordItem.setValue('mp_amount', gData[x].mp_amount);
                        ordItem.setValue('vendor', gData[x].vendor);
                        ordItem.setValue('quotation',qSysId);
                        ordItem.update();
                    } else if(rStat == 'created') {
                        ordItem.setValue('wbs_6', gData[x].wbs_6);
                        ordItem.setValue('ms_code', gData[x].ms_code);
                        ordItem.setValue('description', gData[x].description);
                        ordItem.setValue('quantity', gData[x].quantity);
                        ordItem.setValue('unit_price', gData[x].unit_price);
                        ordItem.setValue('extended_price', gData[x].extended_price);
                        ordItem.setValue('unit_cost', gData[x].unit_cost);
                        ordItem.setValue('extended_cost', gData[x].extended_cost);
                        ordItem.setValue('unit_mp', gData[x].unit_mp);
                        ordItem.setValue('mp_amount', gData[x].mp_amount);
                        ordItem.setValue('vendor', gData[x].vendor);
                        ordItem.setValue('quotation', qSysId);
                        ordItem.insert();
                    }
                }
            }
        }
        
    var userName = gs.getUser().getName();
    data.userName = userName;
    data.sys_id = $sp.getParameter("sys_id"); //rfq_entry sys_id ? //quotation sys_id?
    data.gridUrl = '/x_yergb_bpm_SorinGrid_BPM.do?id_q=' + data.sys_id;

    // Retrieve data for rendering
    if (data.sys_id) {
        var grI = new GlideRecord('x_yergb_bpm_quotation');
        if (grI.get(data.sys_id)) {
            // Populate data object with field values
            data.active = grI.getValue('active');
            data.assigned_to = grI.getDisplayValue('assigned_to');
            data.assignment_group = grI.getDisplayValue('assignment_group');
            data.gp_amount = grI.getDisplayValue('gp_amount');
            data.gp_percent = grI.getDisplayValue('gp_percent');
            data.mp_amount = grI.getDisplayValue('mp_amount');
            data.mp_gap_percent = grI.getDisplayValue('mp_gap_percent');
            data.number = grI.getValue('number');
            data.rfq_entry = grI.getDisplayValue('rfq_entry');
            data.rfq_entry_id = grI.getValue('rfq_entry');
            data.ess_sqms_no = grI.getValue('ess_sqms_no');
            data.state = grI.getDisplayValue('state');
            data.state_value = grI.getValue('state');
            data.total_quote_cost = grI.getDisplayValue('total_quote_cost');
            data.total_quote_price = grI.getDisplayValue('total_quote_price');
            data.version = grI.getValue('version');
            data.ess = grI.getDisplayValue('ess');
					  data.assignment_group_value = grI.getValue('assignment_group');
            data.assigned_to_value = grI.getValue('assigned_to');
        }
    }

    // Retrieve RFQ entry details if rfq_entry_id is provided
    if (data.rfq_entry_id) {
        var grRfq = new GlideRecord('x_yergb_bpm_rfq_entry');
        if (grRfq.get(data.rfq_entry_id)) {
            data.contract = grRfq.contract.name.toString();
            data.reason_code = grRfq.getDisplayValue('reason_code');
            data.request_due_date = grRfq.getDisplayValue('request_due_date');
            data.remark = grRfq.getDisplayValue('remark');
            data.currency = grRfq.getDisplayValue('currency');
        }
    }

    // Determine visibility based on state_value
    if (data.state_value == 1) {
        data.showNew = false;
        data.showComplete = false;
        data.showUpdate = false;
        data.showSave = true;
    } else if (data.state_value == 4) {
        data.showNew = false;
        data.showComplete = true;
        data.showUpdate = false;
        data.showSave = true;
    } else {
        data.showNew = true;
        data.showComplete = false;
        data.showUpdate = false;
        data.showSave = false;
    }
	

    // update - button clicked
    if (input) {
        var sysId = input.sys_id;
        var operation = input.operation;

        if (operation === 'saveField' || operation === 'updateState') {
            var gr = new GlideRecord('x_yergb_bpm_quotation');

            if (gr.get(sysId)) {
                if (operation === 'saveField') {
                    gr.setValue('ess_sqms_no', input.ess_sqms_no);
                } else if (operation === 'updateState') {
                    gr.setValue('state', 9);
                }
                gr.update();
            }
        }else if(operation === 'createNew'){
                  var gr2 = new GlideRecord('x_yergb_bpm_quotation');
                 gr2.initialize();
                 gr2.setValue('number', input.number);
                 gr2.setValue('rfq_entry', input.rfq_entry_id);
              gr2.setValue('version', parseInt(input.version) + 1);
                 gr2.setValue('state', 1);
                  gr2.setValue('assignment_group', input.assignment_group_value);
                  gr2.setValue('assigned_to', input.assigned_to_value);
                  gr2.insert();
                  data.redirect_sys_id = gr2.getUniqueValue();
               
                 var grRfq2 = new GlideRecord('x_yergb_bpm_rfq_entry');
              if (grRfq2.get(input.rfq_entry_id)) {
                        grRfq2.setValue('quotation', gr2.getUniqueValue());            
                        grRfq2.update();
              }            
            }
    }
	 if(salesManager != userNameSysId){
            //gs.addErrorMessage("달라")
            data.showNew = false;
        }
        else{
            //gs.addErrorMessage("같아")
            data.showNew = true;
        }


	

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-25 04:53:32</sys_created_on>
        <sys_id>38973e74934702104d95f55a7bba1056</sys_id>
        <sys_mod_count>113</sys_mod_count>
        <sys_name>quotationWd</sys_name>
        <sys_package display_value="BPM" source="x_yergb_bpm">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_package>
        <sys_policy/>
        <sys_scope display_value="BPM">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_scope>
        <sys_update_name>sp_widget_38973e74934702104d95f55a7bba1056</sys_update_name>
        <sys_updated_by>lhyunseok</sys_updated_by>
        <sys_updated_on>2024-06-28 04:20:20</sys_updated_on>
        <template><![CDATA[<link id="style-link" href="https://cdn.jsdelivr.net/gh/flowmt/sample/dist/realgrid-style.css" rel="stylesheet"/>
<script defer type="text/javascript" src="https://cdn.jsdelivr.net/gh/flowmt/sample/dist/realgrid.2.7.2.min.js"> </script>
<script defer>
  var realGrid2Lic = 'upVcPE+wPOmtLjqyBIh9RkM/nBOseBrflwxYpzGZyYkkSQt0t0CTeCSk1qaDqTRZ5JoV9H143uMO5+/xJSE3Lj4YewEIhlh/';
</script>

<div class="yoko-container">
        <div class="yoko-breadcrumb">Home > Quotation</div>
        <div class="yoko-title-btn-wrap">
            <h1 class="yoko-title">Quotation</h1>
            <div class="yoko-btn-wrap">
                <button class="yoko-btn yoko-btn-outline" ng-if="data.showNew" ng-click="btnClickNew()">Create New</button>
                <button class="yoko-btn yoko-btn-outline" ng-if="data.showComplete" ng-click="btnClickComplete()">Complete</button>
                <button class="yoko-btn yoko-btn-outline" ng-if="data.showUpdate" ng-click="btnClickUpdate()">Update</button>
                <button class="yoko-btn yoko-btn-fill" ng-if="data.showSave" ng-click="saveField('ess_sqms_no', c.data.ess_sqms_no)">Save</button>
                <!--button type="button" id="bt-save"   ng-click='gridDetailBtnClick(3)' class="yoko-btn yoko-btn">SAVE</button-->
          </div>
        </div>
        <div class="yoko-content">
            <div class="yoko-search-form-wrap">
                <div class="yoko-search-form">
                    <div class="yoko-form-col">
                        <div class="yoko-form-group">
                            <label for="request_no" class="yoko-short-120">Number</label>
                            <input type="text" name="request_no" value={{data.number}} placeholder="" disabled class="yoko-wid140">
                        </div>
                        <div class="yoko-form-group">
                            <label for="version" class="yoko-short-120">Version</label>
                            <input type="number" name="version" value={{data.version}} placeholder="" disabled class="yoko-wid140">
                        </div>
                        <div class="yoko-form-group">
                            <label for="state" class="yoko-short-120">state</label>
                            <input type="text" name="state" value={{c.data.state}} placeholder={{c.data.state}} disabled class="yoko-wid140">
                        </div>
                        <div class="yoko-form-group">
                            <label for="assignment_group" class="yoko-short-120">Assignment group</label>
                            <div class="yoko-form-inline">
                                <input type="text" name="assignment_group" value={{data.assignment_group}} placeholder={{data.assignment_group}} disabled class="yoko-wid140">
                                <button type="button" class="yoko-btn yoko-btn-search" ng-style="{'display': 'none'}"></button>
                            </div>
                        </div>
                        <div class="yoko-form-group">
                            <label for="assigned_to" class="yoko-short-120">Assigned to</label>
                            <div class="yoko-form-inline">
                                <input type="text" name="assigned_to" value={{data.assigned_to}} placeholder={{data.assigned_to}} disabled class="yoko-wid140">
                            </div>
                        </div>
                    </div>
                    <div class="yoko-flex-responsive">
                        <div class="yoko-form-col">
                        		<div class="yoko-form-group">
                        			<label for="ess_sqms_no" class="yoko-short-135">ESS/SQMS No.</label>
                                <input type="text" name="ess_sqms_no" ng-model="c.data.ess_sqms_no" placeholder="" class="yoko-wid140">
                      			</div>
                            <div class="yoko-form-group">
                                <label for="currency" class="yoko-short-135">Currency</label>
                                <input type="text" name="currency" value={{data.currency}} placeholder="" disabled class="yoko-wid140">
                            </div>
                            <div class="yoko-form-group">
                                <label for="total_quote_price" class="yoko-short-135">Total Quote Price</label>
                                <input type="text" name="total_quote_price" value={{data.total_quote_price}} placeholder="" disabled class="yoko-wid140" style = "text-align:right;">
                            </div>
                            <div class="yoko-form-group">
                                <label for="total_estimated_cost" class="yoko-short-135">Total Quote Cost</label>
                                <input type="text" name="total_quote_cost" value={{data.total_quote_cost}} placeholder="" disabled class="yoko-wid140" style = "text-align:right;">
                            </div>
            
                        </div>
                    
                        <div class="yoko-form-col yoko-form-amount-wrap">
                            <div class="yoko-form-group">
                                <label for="gp_amount" class="yoko-short">GP Amount</label>
                                <input type="text" name="gp_amount" value={{data.gp_amount}} placeholder="" disabled class="yoko-wid140 yoko-text-right">
                            </div>
                            <div class="yoko-form-group">
                                <label for="mp_amount" class="yoko-short">MP Amount</label>
                                <input type="text" name="mp_amount" value={{data.mp_amount}} placeholder="" disabled class="yoko-wid140 yoko-text-right">
                            </div>
                            <div class="yoko-form-group">
                                <label for="gp" class="yoko-short">GP %</label>
                                <input type="text" name="gp" value={{data.gp_percent}} placeholder="" disabled class="yoko-wid140 yoko-text-right">
                            </div>
                            <div class="yoko-form-group">
                                <label for="mp_gap" class="yoko-short">MP Gap %</label>
                                <input type="text" name="mp_gap" value={{data.mp_gap_percent}} placeholder="" disabled class="yoko-wid140 yoko-text-right">
                            </div>
                        </div>
                    </div>

                    <div class="yoko-form-col">
                        <div class="yoko-form-col">
                            <div class="yoko-form-inline">
                                <div class="yoko-form-col">
                                    <div class="yoko-form-group">
                                        <label for="rfq_entry" class="yoko-short">RFQ Entry</label>
                                        <div class="yoko-form-inline">
                                          	<button class="yoko-btn-link yoko-wid140 yoko-short" ng-click="handleClick()" style="background-color: #f0f0f0; border: 1px solid #ccc; box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3); padding: 10px 20px; border-radius: 5px; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);">
                                    {{c.data.rfq_entry}}</button> 
                                        </div>
                                    </div>
                                    <div class="yoko-form-group">
                                        <label for="contractor" class="yoko-short">Contractor</label>
                                        <input type="text" name="contractor" value={{data.contract}} placeholder="" disabled class="yoko-wid140">
                                    </div>
                                </div>
                                <div class="yoko-form-col">
                                    <div class="yoko-form-group">
                                        <label for="reason_code" class="yoko-short-120">Reason Code</label>
                                        <input type="text" name="reason_code" value={{data.reason_code}} placeholder="" disabled class="yoko-wid140">
                                    </div>
                                    <div class="yoko-form-group">
                                        <label for="request_due_date" class="yoko-short-120">Request Due Date</label>
                                        <input type="text" name="request_due_date" value={{data.request_due_date}} placeholder="" disabled class="yoko-wid140">
                                    </div> 
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="caution" class="yoko-short">Remark</label>
                                <textarea id="caution" name="caution" rows="4" required placeholder="{{data.remark}}" disabled>{{data.remark}}</textarea>
                            </div>
                        </div>
   
                    </div>
                    <div class="yoko-form-col"> 

                    </div>
         
                </div>
            </div>
    
           <!--iframe src={{data.gridUrl}} width='100%' height='500px' style='border:none;' id='myIframe'></iframe--> 
          <div class="yoko-grid-area-wrapper">
                <div class="yoko-grid-btn-wrap">
                    <button type="button" id="bt-add"    ng-click='gridDetailBtnClick(1)' class="yoko-btn yoko-btn-add"></button>
                    <button type="button" id="bt-delete" ng-click='gridDetailBtnClick(2)' class="yoko-btn yoko-btn-delete"></button>
                </div>
                <div class="yoko-grid-area">

                </div>
            </div> 
          <div class="out" id='gridContainer' style="width:100%; height: 200px;"></div>
            
        </div>
    </div>
]]></template>
    </sp_widget>
</record_update>
