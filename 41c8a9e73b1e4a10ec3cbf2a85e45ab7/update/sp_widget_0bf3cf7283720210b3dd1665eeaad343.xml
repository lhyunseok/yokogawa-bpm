<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope, $rootScope, $window, $location, $realgridkey, $realgrid) {
  /* widget controller */
  var c = this;
	
	$window.realGrid2Lic = $realgridkey.getKey();
	$window.RealGrid = $realgrid.getRealGrid();

	var modalOrderType = document.getElementById("modalOrderType");
	var modalProjectType = document.getElementById("modalProjectType");
	var modalAnsoff = document.getElementById("modalAnsoff");
	var modalJobType = document.getElementById('modalJobType');
	var modalVendor = document.getElementById('modalVendor');
	var modalWbs = document.getElementById('modalWbs');
	var modalEndUser = document.getElementById('modalEndUser');
	var modalContractor = document.getElementById('modalContractor');
	
	var modalSalesOffice = document.getElementById("modalSalesOffice");
	
	/* Server master values */
	c.data.oiSysId = '';
	c.data.rfqSysId = '';
	c.data.quotSysId = '';
	
	c.data.btnHeaderType = '';
	c.data.initScreen = true;
	c.data.initOiReport = true;
	c.data.initRfqEntry = true;
	c.data.initQuotation = true;

	c.data.showAddInfo = true;
	c.data.showRFQEntry = true;
	c.data.showQuotation = true;
	
	c.data.showBtnCancel = false;
	c.data.showBtnSave = false;
	c.data.showBtnRequest = false;
	c.data.showBtnAuthorize = false;
	
	c.data.disPerc = true;
	
	/* GRID */
	c.data.gridBtnType = '';
	
	/* Modal type */
	c.data.modalOrderType = false;
	c.data.modalTypeOrderType = false;
	c.data.modalTypeTaxClass = false;
	c.data.modalTypeIndustry = false;
	c.data.modalTypePayTerms = false;
	c.data.modalSalesOffice = false;
	
	c.data.modalProjectType = false;
	c.data.modalTypePrjType1 = false;
	c.data.modalTypePrjType2 = false;
	c.data.modalTypePrjType3 = false;
	
	c.data.modalAnsoff = false;
	c.data.modalTypeAnsoff1 = false;
	c.data.modalTypeAnsoff2 = false;
	c.data.modalTypeAnsoff3 = false;
	
	function getValueOrEmptyString(value) {
		return typeof value === 'undefined' ? '' : value;
	}
	
	function isEmpty(str){
		if(typeof str == "undefined" || str == null || str == "")
			return true;
		else
			return false ;
	}
	
	$scope.displayScreen = function(idx) {
		if(idx == 1) {
			c.data.showAddInfo = !c.data.showAddInfo;
		} else if(idx == 2) {
			c.data.showRFQEntry = !c.data.showRFQEntry;
		} else if(idx == 3) {
			c.data.showQuotation = !c.data.showQuotation;
		}
	}
	
	$scope.onKeyPressed = function($event, type) {
		if(type=='SO') {
			if($event.keyCode == 13) {
				c.data.MUCode = '';
				c.data.soSysid = '';
				c.data.soMuCodeSysid = '';
				$scope.btnClickSOSearch();
			}
		} else if (type=='EndUser') {
			if($event.keyCode == 13) {
				c.data.endUserCountry = '';
				c.data.endUserSysid = '';
				$scope.btnClickEndUserSearch();	
			}
		}  else if (type=='Contractor') {
			if($event.keyCode == 13) {
				c.data.contractorCountry = '';
				c.data.contractorSysid = '';
				$scope.btnClickContractorSearch();
			}
		} else if (type == 'OrderType') {
			if($event.keyCode == 13) {
				c.data.orderTypeCode = '';
				$scope.btnClickOrdTypeSearch(1);
			}
		} else if(type == 'TaxClass') {
			if($event.keyCode == 13) {
				c.data.taxClassCode = '';
				$scope.btnClickOrdTypeSearch(2);
			}
		} else if(type == 'Industry') {
			if($event.keyCode == 13) {
				c.data.industryCode = '';
				$scope.btnClickOrdTypeSearch(3);
			}
		} else if(type == 'PayTerm') {
			if($event.keyCode == 13) {
				c.data.payTermsCode = '';
				$scope.btnClickOrdTypeSearch(4);
			}
		} else if(type == 'JobType') {
			if($event.keyCode == 13) {
				c.data.jobTypeSysId = '';
				$scope.btnClickDMRSearch(1);
			}
		}
	}
	

 	
	$scope.btnClickSOSearch = function(/*str*/) {
		modalSalesOffice.style.display = 'block';
		c.data.modalSalesOffice = true;
		c.data.searchQuery =  getValueOrEmptyString(c.data.SONm);
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;
		
		c.data.modalSOHeader = [{
			text: "name",
			value: "",
			fieldLabel: "Saled Office"
		}, {
			text: "department",
			value: "",
			fieldLabel: "MU Code"
		}];
		
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	
	$scope.closeModalSalesOffice = function() {
		c.data.modalSalesOffice = false;
		modalSalesOffice.style.display = 'none';
	}
	
	$scope.clickModalSO = function(item) {
		c.data.SONm = item.name;
		c.data.MUCode = item.muCode;
		c.data.soSysid = item.sysid;
		c.data.soMuCodeSysid = item.muSysid;
		
		c.data.modalSalesOffice = false;
		modalSalesOffice.style.display = 'none';
	}
	
	function getInteger(str) {
		if((str == undefined) || (str=='')) {
			return 0;
		}
		
		return Number(str);
	}
	
	function validation() {
		if(isEmpty(c.data.MUCode)) {
			alert("MU code is not selected");
			return false;
		}
		
		
		var jpt = dpPrjType.getJsonRows();
		var tot = 0;
		for(var tt in jpt) {
			tot += (jpt[tt].perc==undefined ? 0 : jpt[tt].perc);
		}
		
		if(tot != 100) {
			alert("Project Type's total value is not 100");
			return false;
		}
		
		var jao = dpAnsoff.getJsonRows();
		tot = 0;
		for(var ta in jao) {
			tot += (jao[ta].perc==undefined ? 0 : jao[ta].perc);
		}
		
		if(tot != 100) {
			alert("Ansoff Type's total value is not 100");
			return false;
		}
	
		return true;
	}
	
	function gridsSave() {
		gvDetail.commit(true);
		gvPrjType.commit(true);
		gvAnsoff.commit(true);
		
		c.data.gridBtnTransact = 'T';
		c.data.gridDetailData = dpDetail.getJsonRows();
		for(var x=0; x<c.data.gridDetailData.length; x++) {
			c.data.gridDetailData[x].rowStat = dpDetail.getRowState(x);
		}
		
		c.data.gridDpProjecttype = dpPrjType.getJsonRows();
		c.data.gridDpAnsoff = dpAnsoff.getJsonRows();
	}
	
	$scope.btnHeader = function(str) {
		console.log('HEAD BUTTON : ' + str);
		c.data.redirect_sys_id = '';
		c.data.btnHeaderType = '';
		
		gridsSave();
		if(str=='save') {
			//validation();
			if(c.data.oiSysId=='') {
				c.data.btnHeaderType = 'oiInsert';
			} else {
				c.data.btnHeaderType = 'oiUpdate';
			}
		} else if(str == 'cancel') {
			c.data.btnHeaderType = 'cancel';
		} else if(str == 'request') {
			if(validation()) {
				c.data.btnHeaderType = 'request';
			} else {
				c.data.btnHeaderType = '';
			}
		} else if(str == 'autorize') {
			if(validation()) {
				c.data.btnHeaderType = 'autorize';
			} else {
				c.data.btnHeaderType = '';
			}
		}
		
		if(c.data.btnHeaderType != '') {
			console.log('CLIENT HD BTN : ' + c.data.btnHeaderType) ;
			c.server.update().then(function(response) {
				console.log('Server response:', response);

				if( c.data.redirect_sys_id != '' ) {
					window.location.href = "/ybpm?id=orderintakereport&sys_id=" + c.data.redirect_sys_id;
				}

				c.data.btnHeaderType = '';
				c.data.redirect_sys_id = '';
			});
		}
	}
	
	$scope.btnClickOrdTypeSearch = function(idx) {
		c.data.itemsOrdertype = [];
		modalOrderType.style.display = 'block';
		c.data.modalOrderType = true;
		//c.data.searchQuery = '';
		//c.data.modalQuery = '';
		
		c.data.modalOrderTypeHeader = [{
			text: "name",
			value: "",
			fieldLabel: "Name"
		}, {
			text: "code",
			value: "",
			fieldLabel: "Code"
		}];
		
		//debugger;
		if(idx == 1) {
			c.data.modalOrderTypeTitle = 'Order Type';
			c.data.modalTypeOrderType = true;
			c.data.searchQuery = getValueOrEmptyString(c.data.orderTypeNm);
			c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;
		} else if(idx == 2) {
			c.data.modalOrderTypeTitle = 'TAX Class';
			c.data.modalTypeTaxClass = true;
			c.data.searchQuery = getValueOrEmptyString(c.data.taxClassNm);
			c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;
		} else if(idx == 3) {
			c.data.modalOrderTypeTitle = 'Industry';
			c.data.modalTypeIndustry = true;
			c.data.searchQuery = getValueOrEmptyString(c.data.industryNm);
			c.data.modalQuery = 'industry_name' + 'LIKE' + c.data.searchQuery;
		} else if(idx == 4) {
			c.data.modalOrderTypeTitle = 'Payment Terms';
			c.data.modalTypePayTerms = true;
			c.data.searchQuery = getValueOrEmptyString(c.data.payTermsNm);
			c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;
		}
		
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	/*$scope.btnClickOrdTypeInfo = function(idx) {
		console.log("BTN : Ord type Info--" + idx);
		
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}*/
	
	$scope.btnClickDMRSearch = function(idx) {
		c.data.searchQuery = getValueOrEmptyString(c.data.jobTypeNm);
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;

		if(idx == 1) {
			modalJobType.style.display = 'block';
			c.data.modalDmrType = 'JOB';
			
			c.data.modalSOHeader = [{
				text: "name",
				value: "",
				fieldLabel: "Name"
			}, {
				text: "code",
				value: "",
				fieldLabel: "Code"
			}];
		}
		c.server.update().then(function(response) {
			console.log('Server response:', response);
			
			c.data.modalDmrType = '';
		});
	}
	
	/*$scope.btnClickDMRInfo = function(idx) {
		console.log("BTN : DMR Info--" + idx);
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}*/
	
	$scope.btnClickDMRLoad = function() {
		console.log("BTN : DMR Load");
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	$scope.btnClickAttAdd = function(idx) {
		console.log("BTN : Attatch Add");
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	$scope.btnClickAttDel = function(idx) {
		console.log("BTN : Attatch Delete");
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	/*$scope.btnClickPrjTypeInfo = function(idx) {
		console.log("BTN : Project Type Info---"+idx);
		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	$scope.btnClickAnsoffTypeInfo = function(idx) {
		console.log("BTN : Ansoff Type Info---"+idx);
		c.server.update().then(function(response) {
					console.log("RESPONSE : Ansoff Type Info---"+idx);
			console.log('Server response:', response);
		});
	}*/
	
	
	/* Modal Close button */
  $scope.onModalKeyPressed = function($event, type) {
		if(type == 'OrderType') {
			$scope.clickOrderTypeModalSearch();
		} else if (type == 'ProjectType') {
			$scope.clickProjectTypeSearch();
		} else if (type == 'Ansoff') {
			$scope.clickAnsoffModalSearch();
		} else if (type == 'Vendor') {
			$scope.clickVendorModalSearch();
		} else if (type == 'WBS') {
			$scope.clickWbsModalSearch();
		} else if (type == 'JobType') {
			$scope.clickJobModalSearch(1);
		} else if (type == 'SO') {
			$scope.clickSOModalSearch();
		} else if (type == 'EndUser') {
			$scope.clickEndUserModalSearch();
		} else if (type == 'Contractor') {
			$scope.clickContractorModalSearch();
		}
	}
	
	$scope.closeModalOrderType = function() {
		c.data.modalOrderType = false;
		c.data.modalTypeOrderType = false;
		c.data.modalTypeTaxClass = false;
		c.data.modalTypeIndustry = false;
		c.data.modalTypePayTerms = false;
			
		modalOrderType.style.display = 'none';
	}
	
	$scope.clickOrderType = function(item) {
		if(item.type == 1) {
			c.data.orderTypeNm = item.name;
			c.data.orderTypeCode = item.code;
		} else if(item.type == 2) {
			c.data.taxClassNm = item.name;
			c.data.taxClassCode = item.code;
		} else if(item.type == 3) {
			c.data.industryNm = item.name;
			c.data.industryCode = item.code;
			c.data.industrySysId = item.sysid;
		} else if(item.type == 4) {
			c.data.payTermsNm = item.name;
			c.data.payTermsCode = item.code;
		}
		
		c.data.modalOrderType = false;
		c.data.modalTypeOrderType = false;
		c.data.modalTypeTaxClass = false;
		c.data.modalTypeIndustry = false;
		c.data.modalTypePayTerms = false;
			
		modalOrderType.style.display = 'none';
	}
	
	$scope.closeModalProjectType = function() {
		c.data.modalProjectType = false;
		
		modalProjectType.style.display = 'none';
	}
	
	$scope.clickProjectType = function(item) {
		var curr = gvPrjType.getCurrent();
  	dpPrjType.updateRow(curr.dataRow, item);

		c.data.modalProjectType = false;
		modalProjectType.style.display = 'none';
	}
	
	$scope.closeModalAnsoff = function() {
		c.data.modalAnsoff = false;
		modalAnsoff.style.display = 'none';
	}
	
	$scope.clickAnsoff = function(item) {		
		var curr = gvAnsoff.getCurrent();
  	dpAnsoff.updateRow(curr.dataRow, item);

		c.data.modalAnsoff = false;
		modalAnsoff.style.display = 'none';
	}

	$scope.clickDmrClass = function(item) {
		c.data.jobTypeNm = item.name;
		c.data.jobTypeSysId = item.sysid;
		
		modalJobType.style.display = 'none';
	}
	
	$scope.closeDmrClass = function() {
		modalJobType.style.display = 'none';
	}
	
	
	
	
	$scope.clickSOModalSearch = function() {
		modalSalesOffice.style.display = 'block';
		c.data.modalSalesOffice = true;
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;
		
		c.server.update().then(function(response) {
			console.log('Server response:', response);
			c.data.modalSalesOffice = false;
		});
	}
	
	$scope.clickJobModalSearch = function(idx) {
		if(idx == 1) {
			modalJobType.style.display = 'block';
			c.data.modalDmrType = 'JOB';
			c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;
		}
		c.server.update().then(function(response) {
			c.data.modalDmrType = '';
		});
	}
	
	$scope.clickProjectTypeSearch = function() {
		modalProjectType.style.display = 'block';
		c.data.modalProjectType = true;
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;

		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	$scope.clickAnsoffModalSearch = function() {
		modalAnsoff.style.display = 'block';
		c.data.modalAnsoff = true;
		c.data.modalQuery = 'biz_name' + 'LIKE' + c.data.searchQuery;

		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	$scope.clickVendorModalSearch = function() {
		modalVendor.style.display = 'block';
		c.data.modalVendor = true;
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;

		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	$scope.clickVendor = function(item) {
		var rowIdx = gvDetail.getCurrent().dataRow;
		dpDetail.setValue(rowIdx, 'vendor', item.name);
		dpDetail.setValue(rowIdx, 'vendor_sysid', item.sysid);
		
		modalVendor.style.display = 'none';
		c.data.modalVendor = false;
	}
	
	$scope.closeModalVendor = function() {
		modalVendor.style.display = 'none';
		c.data.modalVendor = false;
	}
	
	

	$scope.closeModalWbs = function() {
		modalWbs.style.display = 'none';
		c.data.modalWbs = false;
	}
	
	$scope.clickWbsModalSearch = function() {
		modalWbs.style.display = 'block';
		c.data.modalWbs = true;
		c.data.modalQuery = 'description' + 'LIKE' + c.data.searchQuery;

		c.server.update().then(function(response) {
			console.log('Server response:', response);
		});
	}
	
	
	$scope.clickWbs = function(item) {
		var rowIdx = gvDetail.getCurrent().dataRow;
		dpDetail.setValue(rowIdx, 'wbs_6', item.code);
		dpDetail.setValue(rowIdx, 'wbs_6_sysid', item.sysid);
		
		modalWbs.style.display = 'none';
		c.data.modalWbs = false;
	}
	
	
	
	$scope.clickOrderTypeModalSearch = function() {
		c.data.modalOrderType = true;
		if(c.data.modalOrderTypeTitle == 'Industry') {
			c.data.modalQuery = 'industry_name' + 'LIKE' + c.data.searchQuery;
		} else {
			c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;
		}
		
		c.server.update().then(function(response) {
			c.data.modalOrderType = false;
		});
	} 
	
	/* End user */
	$scope.btnClickEndUserSearch = function() {
		c.data.searchQuery = getValueOrEmptyString(c.data.endUserNm);
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;

		modalEndUser.style.display = 'block';
		c.data.modalEndUser = true;

		c.data.modalEndUserHeader = [{
			text: "name",
			value: "",
			fieldLabel: "End User"
		}, {
			text: "code",
			value: "",
			fieldLabel: "Company code"
		}];
		
		c.server.update().then(function(response) {
			c.data.modalEndUser = false;
		});
	}
	
	$scope.closeModalEndUser = function() {
		modalEndUser.style.display = 'none';
		c.data.modalEndUser = false;
	}
	
	$scope.clickEndUserModalSearch = function() {
		c.data.modalEndUser = true;
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;

		c.server.update().then(function(response) {
			c.data.modalEndUser = false;
		});
	}
	
	$scope.clickModalEndUser = function(item) {
		c.data.endUserNm = item.name;
		c.data.endUserCountry = item.code;
		c.data.endUserSysid = item.sys_id;
			
		modalEndUser.style.display = 'none';
		c.data.modalEndUser = false;
	}
	
	
	
	/* modalContractor */ 
	$scope.btnClickContractorSearch = function() {
		c.data.searchQuery = getValueOrEmptyString(c.data.contractorNm);
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;

		modalContractor.style.display = 'block';
		c.data.modalContractor = true;
		
		c.data.modalContractorHeader = [{
			text: "name",
			value: "",
			fieldLabel: "Contractor"
		}, {
			text: "country",
			value: "",
			fieldLabel: "Company Code"
		}];
		
		c.server.update().then(function(response) {
			c.data.modalConstructor = false;
		});
	}

	$scope.closeModalContractor = function() {
		modalContractor.style.display = 'none';
		c.data.modalContractor = false;
	}
	
	$scope.clickContractorModalSearch = function() {
		c.data.modalContractor = true;
		c.data.modalQuery = 'name' + 'LIKE' + c.data.searchQuery;

		c.server.update().then(function(response) {
			c.data.modalContractor = false;
		});
	}
	
	$scope.clickModalContractor = function(item) {
		c.data.contractorNm = item.name;
		c.data.contractorCountry = item.code;
		c.data.contractorSysid = item.sys_id;
		
		modalContractor.style.display = 'none';
		c.data.modalContractor = false;
	}
	
	
	
	
	c.getUrlParameter = function(param) {
		return $location.search()[param];
	};

	// url 에서 sys_id 가져온다. 
	var urlSysId = c.getUrlParameter('sys_id');
	console.log('Value of yourParameterName:', urlSysId);
	c.data.urlSysId = urlSysId;

	var data = {
		message: "OI report screen stepper",
		timestamp: new Date(),
		table: "x_yergb_bpm_oi_report",
		//table: "x_yergb_bpm_quotation",
		sys_id: urlSysId
	};

	// 이벤트를 발생시켜 데이터를 전송
	$rootScope.$broadcast('dataFromSenderWidget', data);
	
	function resizeIframe() {
		var iframe = document.getElementById('myIframe');
		if (iframe) {
			var windowHeight = window.innerHeight;
			iframe.style.height = Math.max(windowHeight * 0.45, 200) + 'px';
		}
	}

	// Add event listener to resize iframe when content loads
	$window.onload = function() {
		resizeIframe();
	};
	
	$window.addEventListener('message', function(event) {
		if (event.data.type === 'updateIframeSrc') {
      location.reload();
    }
  });

	// Add event listener to window resize event
	$window.addEventListener('resize', function() {
		resizeIframe();
	});

	// Call resizeIframe on initial load to set the initial height
	resizeIframe();
	
	

/********************
	GRID PART
*********************/	
	/* GRID for Project type */
	$scope.gridProjectTypeBtnClick = function(str) {
		console.log('gridProjectTypeBtnClick:' + str);
		if(str == 'add') {
			dpPrjType.addRow({
				'sysid' : '', 
				'name' : '',
				'code' : '',
				'perc' : ''
			});
		} else if(str == 'del') {
			var checkedRows = gvPrjType.getCheckedRows();
			for (var k = checkedRows.length - 1; k >= 0; k--) {
				dpPrjType.removeRow(checkedRows[k]);
			}
		}
	}
	
	var dpPrjType;
	var gvPrjType;
	function drawProjectType() {
		dpPrjType = new RealGrid.LocalDataProvider(false);
		gvPrjType = new RealGrid.GridView(document.getElementById('gridProjectType'));
		gvPrjType.setDataSource(dpPrjType);
		
		dpPrjType.setFields([
			{ fieldName: 'sysid', dataType: 'text'},
			{ fieldName: 'name', dataType: 'text'}, 
			{ fieldName: 'code', dataType: 'text'}, 
			{ fieldName: 'perc', dataType: 'number'}
		]);
		
		gvPrjType.setColumns([
			{
				"name": "name",
				"fieldName": "name",
				"type": "data",
				"width": 200,
				"header": {
					"text": "Name"
				},
				"styleName" : "left-column",
				"button":"action",
      	"buttonVisibility": "always"
			},
			{
				"name": "code",
				"fieldName": "code",
				"type": "data",
				"width": 110,
				"header": {
					"text": "Code"
				},
				"styleName" : "left-column"
			},
			{
				"name": "perc",
				"fieldName": "perc",
				"type": "data",
				"width": 80,
				"header": {
					"text": "Percent"
				},
				"styleName" : "right-column"
			},
		]);
		
		gvPrjType.setColumnLayout([
			'name',
			'code',
			'perc'
		]);
		
	  gvPrjType.footers.visible = false;
		gvPrjType.commitEditor();
		gvPrjType.undoable = true;
		gvPrjType.editOptions.commitByCell = true;
		gvPrjType.editOptions.insertable = true;
		gvPrjType.hideDeletedRows = false;
		gvPrjType.header.height = 20;
		gvPrjType.displayOptions.rowHeight = 20;
		gvPrjType.displayOptions.columnMovable = false;
		
		gvPrjType.onCellButtonClicked = function(grid, index, column) {
			c.data.modalProjectTypeHeader = [{
				text: "name",
				value: "",
				fieldLabel: "Name"
			}, {
				text: "code",
				value: "",
				fieldLabel: "Code"
			}];
			
			c.data.itemsProjecttype = [];
			modalProjectType.style.display = 'block';
			c.data.modalProjectType = true;
			c.data.modalProjectTypeTitle = 'Project Type';
			c.data.searchQuery = '';
			c.data.modalQuery = '';
				
			c.server.update().then(function(response) {
				console.log('Server response:', response);
			});
		};

		dpPrjType.setRows(c.data.gridDpProjecttype);
	}
	
	/* GRID for Ansoff */
	$scope.gridAnsoffTypeBtnClick = function(str) {
		console.log('gridAnsoffTypeBtnClick:' + str);
		if(str == 'add') {
			dpAnsoff.addRow({
				'sysid' : '', 
				'name' : '',
				'desc' : '',
				'perc' : ''
			});
		} else if(str == 'del') {
			var checkedRows = gvAnsoff.getCheckedRows();
			for (var k = checkedRows.length - 1; k >= 0; k--) {
				dpAnsoff.removeRow(checkedRows[k]);
			}
		}
	}
	
	var dpAnsoff;
	var gvAnsoff;
	function drawAnsoffType() {
		dpAnsoff = new RealGrid.LocalDataProvider(false);
		gvAnsoff = new RealGrid.GridView(document.getElementById('gridAnsoffType'));
		gvAnsoff.setDataSource(dpAnsoff);
		
		dpAnsoff.setFields([
			{ fieldName: 'sysid', dataType: 'text'},
			{ fieldName: 'name', dataType: 'text'}, 
			{ fieldName: 'desc', dataType: 'text'}, 
			{ fieldName: 'perc', dataType: 'number'}
		]);
		
		gvAnsoff.setColumns([
			{
				"name": "name",
				"fieldName": "name",
				"type": "data",
				"width": 130,
				"header": {
					"text": "Name"
				},
				"styleName" : "left-column",
				"button":"action",
      	"buttonVisibility": "always"
			},
			{
				"name": "desc",
				"fieldName": "desc",
				"type": "data",
				"width": 180,
				"header": {
					"text": "Description"
				},
				"styleName" : "left-column"
			},
			{
				"name": "perc",
				"fieldName": "perc",
				"type": "data",
				"width": 80,
				"header": {
					"text": "Percent"
				},
				"styleName" : "right-column"
			},
		]);
		
		gvAnsoff.setColumnLayout([
			'name',
			'desc',
			'perc'
		]);
		
	  gvAnsoff.footers.visible = false;
		gvAnsoff.commitEditor();
		gvAnsoff.undoable = true;
		gvAnsoff.editOptions.commitByCell = true;
		gvAnsoff.editOptions.insertable = true;
		gvAnsoff.hideDeletedRows = false;
		gvAnsoff.header.height = 20;
		gvAnsoff.displayOptions.rowHeight = 20;
		gvAnsoff.displayOptions.columnMovable = false;
		
		gvAnsoff.onCellButtonClicked = function(grid, index, column) {
			c.data.modalAnsoffHeader = [{
				text: "name",
				value: "",
				fieldLabel: "Name"
			}, {
				text: "desc",
				value: "",
				fieldLabel: "Description"
			}];
			
			c.data.itemsAnsoff = [];
			modalAnsoff.style.display = 'block';
			c.data.modalAnsoff = true;
			c.data.modalAnsoffTitle = 'Ansoff Type';
			c.data.searchQuery = '';
			c.data.modalQuery = '';

			c.server.update().then(function(response) {
				console.log('Server response:', response);
			});
		};
		
		dpAnsoff.setRows(c.data.gridDpAnsoff);
	}
	
	
	
	/* GRID for Detail DATA */
	var dpDetail;
	var gvDetail;
	var containerDetail;
	function drawRealGrid() {
		containerDetail = document.getElementById('gridContainer');
		dpDetail = new RealGrid.LocalDataProvider(false);
		gvDetail = new RealGrid.GridView(containerDetail);
		gvDetail.setDataSource(dpDetail);
		
		dpDetail.setFields([			
			{
				fieldName: 'rowStat',
				dataType: 'text',
			},
			{
				fieldName: 'sys_id',
				dataType: 'text',
			},
			{
				fieldName: 'number',
				dataType: 'text',
			},
			{
				fieldName: 'wbs_6',
				dataType: 'text',
			},
			{
				fieldName: 'wbs_6_sysid',
				dataType: 'text',
			},
			{
				fieldName: 'ms_code',
				dataType: 'text',
			},
			{
				fieldName: 'description',
				dataType: 'text',
			},
			{
				fieldName: 'quantity',
				dataType: 'number',
			},
			{
				fieldName: 'unit_price',
				dataType: 'number',
			},
			{
				fieldName: 'extended_price',
				dataType: 'number',
			},
			{
				fieldName: 'unit_cost',
				dataType: 'number',
			},
			{
				fieldName: 'extended_cost',
				dataType: 'number',
			},
			{
				fieldName: 'unit_mp',
				dataType: 'number',
			},
			{
				fieldName: 'mp_amount',
				dataType: 'number',
			},
			{
				fieldName: 'vendor',
				dataType: 'text',
			},
			{
				fieldName: 'vendor_sysid',
				dataType: 'text',
			},
			{
				fieldName: 'oi_report_num',
				dataType: 'text',
			},
			{
				fieldName: 'oi_report_sys_Id',
				dataType: 'text',
			},
		]);
		
		gvDetail.setColumns([
			{
				"name": "number",
				"fieldName": "number",
				"type": "data",
				"width": 100,
				"header": {
					"text": "Number"
				},
				"editable": false,
				'visible': false
			},
			{
				"name": "wbs_6",
				"fieldName": "wbs_6",
				"type": "data",
				"width": 100,
				"header": {
					"text": "WBS 6"
				},
				"button":"action",
      	"buttonVisibility": "always"
			},
			{
				"name": "ms_code",
				"fieldName": "ms_code",
				"type": "data",
				"width": 100,
				"header": {
					"text": "MS Code"
				},
				"styleName" : "left-column"
			},
			{
				"name": "description",
				"fieldName": "description",
				"type": "data",
				"width": 300,
				"header": {
					"text": "Description"
				},
				"styleName" : "left-column"
			},
			{
				"name": "quantity",
				"fieldName": "quantity",
				"type": "data",
				"width": 120,
				"header": {
					"text": "Quantity"
				},
				"styleName" : "right-column",
				"numberFormat": "#,##0",
			},
			{
				"name": "unit_price",
				"fieldName": "unit_price",
				"type": "data",
				"width": 120,
				"header": {
					"text": "Unit Price"
				},
				"styleName" : "right-column",
				"numberFormat": "#,##0",
			},
			{
				"name": "extended_price",
				"fieldName": "extended_price",
				"type": "data",
				"width": 120,
				"header": {
					"text": "Extended Price"
				}, 
				"editable": false,
				"styleName" : "right-column non-editable",
				"numberFormat": "#,##0",
			},
			{
				"name": "unit_cost",
				"fieldName": "unit_cost",
				"type": "data",
				"width": 120,
				"header": {
					"text": "Unit Cost"
				},
				"styleName" : "right-column",
				"numberFormat": "#,##0",
			},
			{
				"name": "extended_cost",
				"fieldName": "extended_cost",
				"type": "data",
				"width": 120,
				"header": {
					"text": "Extended Cost"
				},
				"editable": false,
				"styleName" : "right-column non-editable",
				"numberFormat": "#,##0",
			},
			{
				"name": "unit_mp",
				"fieldName": "unit_mp",
				"type": "data",
				"width": 120,
				"header": {
					"text": "Unit MP"
				},
				"styleName" : "right-column",
				"numberFormat": "#,##0",
			},
			{
				"name": "mp_amount",
				"fieldName": "mp_amount",
				"type": "data",
				"width": 120,
				"header": {
					"text": "MP Amount"
				},
				"editable": false,
				"styleName" : "right-column non-editable",
				"numberFormat": "#,##0",
			},
			{
				"name": "vendor",
				"fieldName": "vendor",
				"type": "data",
				"width": 120,
				"header": {
					"text": "Vendor"
				},
				"styleName" : "left-column",
				"button":"action",
      	"buttonVisibility": "always"
			},
			{
				"name": "oi_report_num",
				"fieldName": "oi_report_num",
				"type": "data",
				"width": 120,
				"header": {
					"text": "OI report Number"
				},
				"editable": false,
				'visible' : false,
			}
		]);
		
		gvDetail.setColumnLayout([
			//'sys_id',
			'number',
			'wbs_6',
			'ms_code',
			'description',
			'quantity',
			'unit_price',
			'extended_price',
			'unit_cost',
			'extended_cost',
			'unit_mp',
			'mp_amount',
			'vendor',
			'oi_report_num'
		]);
		
	  gvDetail.footers.visible = false;
		gvDetail.commitEditor();
		gvDetail.undoable = true;
		gvDetail.editOptions.commitByCell = true;
		gvDetail.editOptions.insertable = true;
		gvDetail.hideDeletedRows = false;
		gvDetail.header.height = 40;
		gvDetail.displayOptions.rowHeight = 30;
		gvDetail.displayOptions.columnMovable = false;
		
		dpDetail.softDeleting = true;
		
		gvDetail.onCellButtonClicked = function(grid, index, column) {
			if(column.name == 'wbs_6') {
				c.data.itemsWbs = [];
				modalWbs.style.display = 'block';
				c.data.modalWbs = true;
				c.data.searchQuery = '';
				c.data.modalQuery = '';

				c.data.modalWbsHeader = [{
					text: "desc",
					value: "",
					fieldLabel: "Description"
				}, {
					text: "code",
					value: "",
					fieldLabel: "Code"
				}];
			} else if(column.name == 'vendor'){
				c.data.itemsVendor = [];
				modalVendor.style.display = 'block';
				c.data.modalVendor = true;
				c.data.searchQuery = '';
				c.data.modalQuery = '';

				c.data.modalVendorHeader = [{
					text: "name",
					value: "",
					fieldLabel: "Name"
				}, {
					text: "code",
					value: "",
					fieldLabel: "Code"
				}];
			}

			c.server.update().then(function(response) {
				console.log('Server response:', response);
			});
		};
		
		dpDetail.setRows(c.data.gridDetailData);
	}
	
	$scope.gridDetailBtnClick = function(idx) {		
		var v = {
			'rowStat' : '',
			'sys_id' : '', 
			'number' : '', 
			'wbs_6' : '', 
			'ms_code' : '', 
			'description' : '', 
			'quantity' :'', 
			'unit_price' :'', 
			'extended_price' : '', 
			'unit_cost' : '',
			'extended_cost' : '',
			'unit_mp' : '', 
			'mp_amount' : '', 
			'vendor' : '', 
			'oi_report_num' : '',
			'oi_report_sys_Id' :data.oiSysId
		}
		
		c.data.gridBtnTransact = '';
		if(idx == 1) {
			dpDetail.addRow(v);
		} else if(idx == 2) {
			dpDetail.insertRow(0, v);
		} else if(idx == 3) {
			var checkedRows = gvDetail.getCheckedRows();
			for (var k = checkedRows.length - 1; k >= 0; k--) {
				dpDetail.removeRow(checkedRows[k]);
			}
		} else if(idx == 4) {
			c.data.gridBtnTransact = 'T';
			c.data.gridDetailData = dpDetail.getJsonRows();
			for(var x=0; x<c.data.gridDetailData.length; x++) {
				c.data.gridDetailData[x].rowStat = dpDetail.getRowState(x);
			}
			
			c.server.update().then(function(response) {
				console.log('Server response:', response);

				if( c.data.redirect_sys_id != '' ) {
					window.location.href = "/sp?id=orderintakereport&sys_id=" + c.data.redirect_sys_id;
				}

				c.data.redirect_sys_id = '';
			});
		}
	}

	/* 최초 초기화 */
	c.server.update().then(function(response) {
		console.log('Init screen rsponse:', response);
		
		c.data.initScreen = false;
		c.data.initOiReport = false;
		c.data.initRfqEntry = false;
		c.data.initQuotation = false;

		c.data.showBtnCancel = true;
		c.data.showBtnSave = true;
		c.data.showBtnRequest = true;
		c.data.showBtnAuthorize = true;
		
		c.data.disSONm = true;
		c.data.disSONmSearch = true;
		c.data.disSONmInfo = true;
		c.data.disOiAmtTC = true;
		c.data.disOiAmtLC = true;
		c.data.disTotEstCost = true;
		c.data.disGpAmt = true;
		c.data.disMpAmt = true;
		c.data.disGpPerc = true;
		c.data.disMpPerc = true;
		c.data.disEndUserNm = true;
		c.data.disConstrucNm = true;
		c.data.disCustPONo = true;

		console.log("STATE:" + c.data.oiState);
		if(Number(c.data.oiStateCode) == "1") {			
			c.data.disOrdType = false;
			c.data.disTaxClass = false;
			c.data.disIndustry = false;
			c.data.disPayTerm = false;
			c.data.disMaturDays = false;
			c.data.disJobType = false;
			c.data.disDmrClass = true;
			c.data.disAttPO = true;
			c.data.disAttBOM = true;
			c.data.disAttESS = true;
			c.data.disAttEtc = true;
			c.data.disPrjType1 = false;
			c.data.disPrjType2 = false;
			c.data.disPrjType3 = false;
			c.data.disAnsoff1 = false;
			c.data.disAnsoff2 = false;
			c.data.disAnsoff3 = false;
			c.data.disChkFlag = false;
			c.data.disPerc = false;
			c.data.disEndUserNm = false;
			c.data.disConstrucNm = false;
			c.data.disCustPONo  = false;
			
			c.data.disSONm = false;
			c.data.disSONmSearch = false;
			
			if(c.data.salesCompanyNm == 'YCN') {
				c.data.showBtnAuthorize = true;
				c.data.showBtnRequest = false;
			} else {
				c.data.showBtnAuthorize = false;
				c.data.showBtnRequest = true;
			}
		} else if( (Number(c.data.oiStateCode) == "3") || 
			(Number(c.data.oiStateCode) == "6") ) {
			c.data.disOrdType = true;
			c.data.disTaxClass = true;
			c.data.disIndustry = true;
			c.data.disPayTerm = true;
			c.data.disMaturDays = true;
			c.data.disJobType = true;
			c.data.disDmrClass = true;
			c.data.disAttPO = true;
			c.data.disAttBOM = true;
			c.data.disAttESS = true;
			c.data.disAttEtc = true;
			c.data.disPrjType1 = true;
			c.data.disPrjType2 = true;
			c.data.disPrjType3 = true;
			c.data.disAnsoff1 = true;
			c.data.disAnsoff2 = true;
			c.data.disAnsoff3 = true;
			c.data.disChkFlag = true;
			c.data.disPerc = true;
			
			c.data.showBtnAuthorize = false;
			c.data.showBtnRequest = false;
			c.data.showBtnCancel = false;
			c.data.showBtnSave = false;
		} else {
			c.data.disOrdType = false;
			c.data.disTaxClass = false;
			c.data.disIndustry = false;
			c.data.disPayTerm = false;
			c.data.disMaturDays = false;
			c.data.disJobType = false;
			c.data.disDmrClass = true;
			c.data.disAttPO = true;
			c.data.disAttBOM = true;
			c.data.disAttESS = true;
			c.data.disAttEtc = true;
			c.data.disPrjType1 = false;
			c.data.disPrjType2 = false;
			c.data.disPrjType3 = false;
			c.data.disAnsoff1 = false;
			c.data.disAnsoff2 = false;
			c.data.disAnsoff3 = false;
			c.data.disChkFlag = false;
			c.data.disPerc = false;
			
			if(c.data.salesCompanyNm == 'YCN') {
				c.data.showBtnAuthorize = true;
				c.data.showBtnRequest = false;
			} else {
				c.data.showBtnAuthorize = false;
				c.data.showBtnRequest = true;
			}
		}
		
		drawProjectType();
		drawAnsoffType();
		drawRealGrid();
	});	
};]]></client_script>
        <controller_as>c</controller_as>
        <css>@charset "UTF-8";


body {margin: 0; font-family: "Pretendard"; font-size: 14px; font-weight: 400; line-height: normal;}

ul {margin: 0; padding: 0;}
ul li {list-style: none; margin: 0; padding: 0;}
a {text-decoration: none;}
.blank {width: 100%; padding: 6px 10px 5px 10px; max-height: 28px; width: calc(100%); }
.yoko-container {margin: 40px auto 100px; min-width: 1400px; max-width: 1600px; font-family: "Pretendard"; font-size: 14px; font-weight: 400; letter-spacing: 0;}
.yoko-container * {box-sizing: border-box;}
.yoko-container .yoko-content {display: flex; gap: 10px; flex-direction: column;}
.yoko-breadcrumb {color: #425D78;}
.yoko-title-btn-wrap {display: flex; justify-content: space-between; align-items: center; margin: 8px 0 25px 0;}
.yoko-title-btn-wrap .yoko-title {margin:0; color: #1C3956; font-family: "Pretendard";font-size: 24px;  font-style: normal;  font-weight: 700; line-height: normal;}
.yoko-title-btn-wrap .yoko-btn-wrap {display: flex; gap: 4px; margin-bottom: 0;}

.yoko-btn-wrap {display: flex; justify-content: space-between; margin-bottom: 8px;}
.yoko-btn-wrap &gt; div {display: flex; gap: 4px;}

.yoko-btn {cursor: pointer; border-radius: 4px; text-align: center; font-family: "Pretendard";font-size: 14px;  font-style: normal; font-weight: 400;  padding: 8px 20px 8px 20px;}
.yoko-btn:disabled  {border: 1px solid #AABBD1; color: #C8CED4;}

.yoko-btn.yoko-btn-outline {background: #fff; border: 1px solid #B2B2B2;  color: #4B5E70; }
.yoko-btn.yoko-btn-outline:hover  {border: 1px solid #AABBD1;}

.yoko-btn.yoko-btn-fill {background-color: #68B3FC; border: 1px solid #4193E2; color: #fff;}
.yoko-btn.yoko-btn-fill:hover  {background-color: #4193E2; border: 1px solid #4193E2;}

.yoko-btn.yoko-btn-fill-red {background-color: #FF6D6D; border: 1px solid #E35050; color: #fff;}
.yoko-btn.yoko-btn-fill-red:hover  {background-color: #E35050; border: 1px solid #E35050;}


.yoko-btn-search {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_search.png) no-repeat center center !important;}
.yoko-btn-search:hover {background-color: #eaeaea;}
.yoko-btn-add {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_add.png) no-repeat center center !important;}
.yoko-btn-add:hover {background-color: #eaeaea;}
.yoko-btn-delete {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_delete.png) no-repeat center center !important;}
.yoko-btn-delete:hover {background-color: #eaeaea;}
.yoko-btn-info-fill {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_info.png) no-repeat center center !important;}
.yoko-btn-info-fill:hover {background-color: #eaeaea;}
.yoko-btn-attach {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_attach.png) no-repeat center center !important;}
.yoko-btn-attach:hover {background-color: #eaeaea;}
.yoko-btn-load {border: 1px solid #4193E2; font-weight: 400; padding: 0; min-width: 58px; width: 28px; height: 28px; color: #fff; background-color: #68B3FC;}
.yoko-btn-load:hover {background-color: #4193E2; border: 1px solid #4193E2;}
.yoko-btn-fold {border: 1px solid #B2B2B2; padding: 0; min-width: 28px; width: 28px; height: 28px; background:#fff url(icon_arrow_fold.png) no-repeat center center !important;}
.yoko-btn-fold:hover {background-color: #eaeaea;}
.yoko-btn-fold.active {background:#fff url(icon_arrow_unfold.png) no-repeat center center !important;}


.yoko-search-form {display: flex; gap: 30px; padding: 16px 30px; max-width: 1600px;  background-color: #F7F7F7; border: 1px solid #B2B2B2; border-radius: 4px;}

.yoko-fold-btn-wrap {display: flex; align-items: center; gap: 10px;}

.yoko-form-group .yoko-btn {padding: 5px 10px 5px 10px;}
.yoko-search-form .yoko-form-group {display: flex; align-items: center; gap: 20px; /*width: 100%; min-width: 240px;*/}
.yoko-search-form .yoko-form-group label {width:130px; min-width: 130px; text-align: right;}
.yoko-search-form label {color: #1F3B55; font-family: 'Pretendard'; font-size: 14px; font-style: normal; font-weight: 500; line-height: normal;}
.yoko-search-form label.yoko-short {width: 80px; min-width: 80px;}
.yoko-search-form label.yoko-short-90 {width: 90px; min-width: 100px;}
.yoko-search-form label.yoko-short-100 {width: 100px; min-width: 100px;}
.yoko-search-form label.yoko-short-110 {width: 110px; min-width: 110px;}
.yoko-search-form label.yoko-short-120 {width: 120px; min-width: 120px;}
.yoko-search-form label.yoko-short-130 {width: 130px; min-width: 130px;}
.yoko-search-form label.yoko-short-135 {width: 135px; min-width: 130px;}
.yoko-search-form label.yoko-short-142 {width: 142px; min-width: 130px;}
.yoko-search-form label.yoko-middle {width: 170px; min-width: 170px;}
.yoko-search-form label.yoko-long {width: 200px; min-width: 200px;}
.yoko-search-form label.yoko-btn-fill {background-color: #68B3FC;text-align: center; color: #fff; font-weight: 400;  padding: 5px 10px 6px 10px; border-radius: 4px;}
.yoko-search-form label.yoko-long.yoko-btn-fill {width: calc(200px - 10px);}
.yoko-search-form label.yoko-middle.yoko-btn-fill {width: calc(170px - 10px);}

.yoko-search-form input,
.yoko-search-form select,
.yoko-search-form textarea {font-family: "Pretendard"; font-size: 14px; padding: 6px 10px 5px 10px; max-height: 28px; width: calc(100%); border-radius: 4px; border: 1px solid #B2B2B2; color: #7A8692;}
.yoko-search-form textarea {max-height: none; width: 100%; padding: 10px 10px 10px 10px; }
/* .yoko-search-form input[type=date] {width: 140px; } */
.yoko-search-form input[type=date]::-webkit-calendar-picker-indicator,
.yoko-search-form input[type=date]::-webkit-inner-spin-button {background: url('icon_calendar.png') no-repeat right center; }

.yoko-search-form select {
  -moz-appearance:none; /* Firefox */
  -webkit-appearance:none; /* Safari and Chrome */
  appearance:none;
  background-image: url(icon_arrow_down.png);
  background-repeat: no-repeat;
  background-position-x: 100%;
  background-position-y: 1px;
  line-height: 15px;
  padding: 6px 30px 5px 10px;

}

.yoko-form-inline {display: flex;gap: 4px; width: calc(100% - 4px); align-items: center;}
.yoko-form-group-title {padding: 4px 0 8px 0; color: #1C3956; font-family: "Pretendard"; font-size: 14px;font-style: normal;font-weight: 700; line-height: normal;}
.yoko-form-group-hori  {display: flex;gap: 0; /*width:100%;*/}
.yoko-flex-responsive {display: flex; gap: 30px;}
.yoko-form-col {/*width: 100%;*/ display: flex; gap: 8px; flex-direction: column;}
.yoko-form-col.yoko-gap7 {gap:7px ;}
.yoko-col100 {width: 100%;}
.yoko-col60 {width: 60%;}
.yoko-col50 {width: 50%;}
.yoko-col40 {width: 40%}
.yoko-col35 {width: 35%}
.yoko-col30 {width: 30%}
.yoko-col20 {width: 20%} 
.yoko-col15 {width: 15%} 
.yoko-col10 {width: 10%} 

.yoko-search-form label.checkbox-label {text-align: left;width: auto; min-width: auto; cursor: pointer; display: flex; gap: 10px; align-items: flex-start; justify-content: flex-start; color: #1F3B55; font-family: "Pretendard";  font-size: 14px; font-style: normal; font-weight: 400; line-height: normal;}
.custom-checkbox {position: relative;}
.custom-checkbox input { position: absolute;  opacity: 0;  cursor: pointer;  width: 18px; height: 18px; z-index: 1;}
.custom-checkbox .checkmark {position: relative;  top: 0;  left: 0;  display: block;  height: 18px;  width: 18px;  border-radius: 2px;border: 1px solid #DCE3EB;background: #FFF; overflow: hidden;}
.custom-checkbox:hover input ~ .checkmark {background-color: #FFF;}
.custom-checkbox input:checked ~ .checkmark {  background-color: #68B3FC;  border-radius: 2px;  border: 1px solid #68B3FC;}
.custom-checkbox .checkmark:after {  content: "";  position: absolute;  display: none;}
.custom-checkbox input:checked ~ .checkmark:after {  display: block;  left: 50%; top: 50%;  height: 16px;  width: 18px;  transform: translate(-50%, -50%);  background: url(icon_checkbox.png) no-repeat center center;}

.custom-checkbox input:disabled ~ .checkmark {border: 1px solid #D1D1D1; background: #E2E2E2; cursor: not-allowed; }
.custom-checkbox input:checked:disabled ~ .checkmark {background:#E2E2E2 url(icon_checkbox_dis.png) no-repeat center center; }
.custom-checkbox input:disabled ~ .checkmark:after {background: url(icon_checkbox_dis.png) no-repeat center center;}

.yoko-wid100 {width: 100px !important;}
.yoko-wid103 {width: 103px !important;}
.yoko-wid127 {width: 127px !important;}
.yoko-wid134 {width: 134px !important;}
.yoko-wid140 {width: 140px !important;}
.yoko-wid147 {width: 147px !important;}
.yoko-wid154 {width: 154px !important;}
.yoko-wid158 {width: 158px !important;}
.yoko-wid172 {width: 172px !important;}
.yoko-wid247 {width: 247px !important;}
.yoko-wid308 {width: 308px !important;}
.yoko-wid425 {width: 425px !important;}
.yoko-wid559 {width: 559px !important;}
.yoko-wid717 {width: 717px !important;}

.yoko-ht100 {height: 100px !important;}
.yoko-ht200 {height: 200px !important;}

.yoko-mt-20 {margin-top: 20px;}
.yoko-mb-80 {margin-bottom: 80px;}

.yoko-padding-r20 {padding: 16px 20px 16px 30px;}
.yoko-scroll {padding-right: 15px;}
/* .yoko-form-inline select {width: calc(100% - 28px);} */
.yoko-btn-spacing {width: calc(100% - 32px);}
.yoko-text-right {text-align: right;}

.yoko-search-form-wrapper {display: flex; gap: 20px; }
.yoko-search-form-wrap .yoko-search-form-heading {margin-top: 10px; margin-bottom: 5px; font-size: 16px; font-weight: 600; color: #1F3B55;}

.yoko-governance-wrap .yoko-search-form button {width: 100%; min-width: 140px;}
.yoko-project-wrap .yoko-search-form input[type=text] {width: 100%;}

.yoko-form-group-heading-wrap {display: flex; gap: 9px; justify-content: space-between; align-items: center;}
.yoko-form-group-heading {font-size: 14px; font-weight: 700; color: #1F3B55;}
.yoko-form-group-line {flex-grow: 1; height: 1px; background-color: #E1E1E1;}
.yoko-padding24 {padding: 24px;}
.yoko-grid-btn-wrap {display: flex; gap: 7px; justify-content: right;}

.yoko-project-wrap {height: 255px;}
.yoko-project-wrap .yoko-search-form {height: 100%;}
.yoko-middle-text {width: 10px; text-align: center; color: #4B5E70;}

/* 헤더 */
.yoko-header-container {width: 100%; height: 59px; background-color: #00488D;}
.yoko-header-inner {margin: 0 auto; padding: 8px 30px 8px 16px; max-width: 1920px; min-width: 1280px;}
.yoko-nav-wrap {display: flex; align-items: center; gap: 97px;}
.yoko-nav ul {display: flex; gap: 60px;}
.yoko-menu a {display: block; height: 43px; line-height: 43px; font-size: 14px; font-weight: 600; color: #fff;}
.yoko-depth-arrow {position: relative;}
.yoko-depth-arrow::after {content: ''; display: block; width: 7px; height: 4px; background: url(icon_header_arrow.svg) no-repeat center center; background-size: contain; position: absolute; top: 50%; right: -12px; transform: translateY(-50%);}
.yoko-header-right {display: flex; margin-left: auto; align-items: center; gap: 24px;}
.yoko-header-icon-wrap {display: flex; align-items: center; gap: 15px;}
.yoko-header-user {display: flex; justify-content: center; align-items: center; width: 35px; height: 35px; border-radius: 50%; background-color: #fff; overflow: hidden;}
.yoko-header-search {display: flex; align-items: center;}
.yoko-header-search input {padding: 8px 10px; width: 156px; font-size: 14px; border: none; border-radius: 4px 0 0 4px; outline: none;}
.yoko-header-search input::placeholder {color: #A7B9CA;}
.yoko-header-search .yoko-arrow button {border: none; background-color: none; display: flex; align-items: center; width: 34px; height: 32px; background-color: #fff; border-radius: 0 4px 4px 0; cursor: pointer;}


.yoko-nav ul.yoko-depth {display: none; position: absolute; background-color: #fff; padding: 20px 16px; width: 267px; height: auto; border-radius: 4px; border: 1px solid #00488D; box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.05);}
.yoko-nav ul.yoko-depth a {font-size: 14px; font-weight: 500; color: #425D78;}
.yoko-nav ul.yoko-dep-2-wrap {display: none; flex-direction: column; padding: 14px 12px; gap: 0; background-color: #F6F6F6;}
.yoko-nav .yoko-dep-1 &gt; a {position: relative; padding: 0 12px;}
.yoko-nav .yoko-dep-1 &gt; a::after {content: ''; display: block; width: 24px; height: 24px; background: url(icon_arrow_search.svg) no-repeat center center; background-size: contain; position: absolute; top: 50%; right: 5px; transform: translateY(-50%);}
.yoko-nav .yoko-dep-1 &gt; a.rotate::after {transform: rotate(180deg) translateY(50%);}
.yoko-nav .yoko-dep-1 &gt; a:hover {background-color: #ececec;}
.yoko-nav .yoko-dep-2 &gt; a {padding: 0 12px;}
.yoko-nav .yoko-dep-2 &gt; a:hover {background-color: #fff;}












/* 모달창 */
.yoko-modal-normal {padding: 32px 30px; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 768px; height: 240px; background-color: #fff; box-shadow: 0px 2px 30px rgba(0, 0, 0, 0.1); z-index: 100;}
.yoko-modal-content {position: relative; width: 100%; height: 100%;}
.yoko-modal-content .yoko-btn-wrap {position: absolute; top: 0; right: 0;}
.yoko-modal-content .yoko-btn-group {margin-top: 32px;}
.yoko-modal-content .yoko-btn-group button {padding: 8px 20px;}
.yoko-modal-content .yoko-btn-wrap button {padding: 6px 10px;}

/* 테이블 형식 */
.yoko-search-table input,
.yoko-search-table select,
.yoko-search-table textarea {font-family: "Pretendard"; font-size: 13px; padding: 6px 10px 5px 10px; max-height: 28px; width: calc(100%); border-radius: 4px; border: 1px solid #E1E8F0; color: #7A8692;}
.yoko-search-table textarea {max-height: none; width: 100%; padding: 10px 10px 10px 10px; }
.yoko-search-table input[type=date]::-webkit-calendar-picker-indicator,
.yoko-search-table input[type=date]::-webkit-inner-spin-button {background: url('images/icon_calendar.png') no-repeat right center; }

.yoko-search-table select {
  -moz-appearance:none; /* Firefox */
  -webkit-appearance:none; /* Safari and Chrome */
  appearance:none;
  background-image: url(images/icon_arrow_down.png);
  background-repeat: no-repeat;
  background-position-x: 100%;
  background-position-y: 1px;
  line-height: 15px;
  padding: 6px 30px 5px 10px;
}

.yoko-search-table-wrap {display: flex; gap: 0;}
.yoko-search-table tr.yoko-height-short {height: 39px;} 
.yoko-search-table {border-spacing: 0; border-collapse: collapse;}
.yoko-search-table tr th {padding-right: 16px; text-align: right; background-color: #F7F7F7; border-top: 1px solid #EDEDED; border-bottom: 1px solid #EDEDED;}
.yoko-search-table tr th.yoko-bg-none {background-color: #fff;}
.yoko-search-table tr th label {color: #4B5E70; font-family: 'Pretendard'; font-size: 13px; font-style: normal; font-weight: 500; line-height: normal;}
.yoko-search-table tr td {padding: 5px 10px; border-top: 1px solid #EDEDED; border-bottom: 1px solid #EDEDED;}
.yoko-search-table tr td input {padding: 5px 10px; width: 100%; height: 100%;}
.yoko-search-table tr td input:disabled {border: 1px solid #E1E8F0; background: #F1F1F1;}
.yoko-search-table .yoko-form-inline {width: 100%;}

.yoko-search-table-wrapper {display: flex; gap: 30px;}
.yoko-search-table-heading {margin-top: 12px; margin-bottom: 5px; font-size: 16px; font-weight: 600; color: #1F3B55;}
.yoko-table-heading {text-align: left !important; font-size: 14px; font-weight: 700; color: #1F3B55;}
.yoko-search-table.yoko-empty-col {flex: 1;}




@media (max-width: 1719px) {
  .yoko-container {width: 1280px; min-width: 1280px;}
  .yoko-search-form {gap: 15px;}
  .yoko-flex-responsive {flex-direction: column; gap: 8px;}
  .yoko-flex-responsive-row {flex-direction: row; gap: 20px;}
  .yoko-search-form-company.yoko-col60 {width: 888px;}
  .yoko-search-form-company .yoko-padding24 {padding: 14px;}
  .yoko-search-form-company .yoko-search-form {gap: 7px;}
  .yoko-search-form-governance.yoko-col40 {width: 381px;}
  .yoko-project-wrap.yoko-col60 {width: 888px;}
  .yoko-project-wrap.yoko-col40 {width: 381px;}
  .yoko-project-wrap .yoko-search-form {padding: 18px;}

  .yoko-form-amount-wrap label.yoko-short {width: 130px;}
  .quotation-responsive label.yoko-short-110 {width: 142px;}
  .yoko-flag-wrap {margin-top: 15px; height: 100px !important;}
  .yoko-flag-wrap.yoko-search-form .yoko-form-group {gap: 40px;}
  .yoko-flag-wrap .yoko-flex-responsive-row {flex-direction: row; gap: 40px;}

  .yoko-nav-wrap {gap: 30px;}
  .yoko-nav ul {gap: 55px;}
}




.modal {
  display: none;
  position: fixed;
  z-index: 1;
  padding-top: 60px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0,0,0);
  background-color: rgba(0,0,0,0.4);
}

.modal-content {
  background-color: #fefefe;
  margin: 5% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}


/*  
TEST Modal CSS
*/
.modal {
display: none; /* Hidden by default */
position: fixed; /* Stay in place */
z-index: 3; /* Sit on top */
left: 0;
top: 0;
width: 100%; /* Full width */
height: 100%; /* Full height */
overflow: auto; /* Enable scroll if needed */
background-color: rgb(0,0,0); /* Fallback color */
background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}
.modal-content {
background-color: #fefefe;
//margin: 5% auto; /* 15% from the top and centered */
padding: 20px;
border: 1px solid #888;
width: 50%; /* Reduced width to 60% */
}
.close {
color: #aaa;
float: right;
font-size: 28px;
font-weight: bold;
}
.close:hover,
.close:focus {
color: black;
text-decoration: none;
cursor: pointer;
}
.container {
list-style-type: none;
padding: 0;
}
.container li {
padding: 8px 0;
border-bottom: 1px solid #ddd;
display: flex;
justify-content: space-between;
margin-bottom: 10px;
box-sizing: border-box; /* Include padding and border in element's total width and height */
width: 100%; /* Ensure the list items take the full width of the container */
}
.highlight-form {
border: 2px solid red;
}

.rg-header-cell {text-align: center !important;}
.right-column { text-align: right !important;}
.left-column { text-align: left !important;}

.non-editable { background: #dddddd !important}

/*리얼그리드 수정*/
/*.rg-root {color: #4B5966 !important;  font-family: "Pretendard" !important;   font-size: 14px !important;  font-style: normal !important;  font-weight: 500 !important;  line-height: normal !important;}
.rg-grid {border: 1px solid #EAEEF3 !important;}

.rg-header {background: #FBFCFF  !important; color:#8B99A6 !important; font-weight: 600 !important; font-weight: 500 !important;}
.rg-header .rg-table tr td {border-right: 1px solid #EAEEF3 !important; border-bottom: 1px solid #EAEEF3 !important; font-weight: 500 !important;} 
.rg-head {background: #FBFCFF  !important; color:#8B99A6 !important; font-weight: 600 !important; font-weight: 500 !important;}
.rg-head .rg-table tr td { border-right: 1px solid #EAEEF3 !important;  border-bottom: 1px solid #EAEEF3 !important; font-weight: 500 !important;}

.rg-body,
.rg-fixed-body {color: #4B5966 !important;}
.rg-body .rg-table tr td, 
.rg-fixed-body .rg-table tr td {border-right: 1px solid #EAEEF3 !important;  border-bottom: 1px solid #EAEEF3 !important;}
.rg-rowbarcontainer .rg-table tr td {background-color: transparent !important;    border-right: 1px solid #EAEEF3 !important;    border-bottom: 1px solid #EAEEF3 !important;}
.rg-alternate-row {background: #fff !important;}
.rg-footer {color: #606060 !important; background: #FBFCFF  !important;}
.rg-footer .rg-table tr td {border-right: 1px solid #EAEEF3 !important;  border-top: 1px solid #EAEEF3 !important;}
.rg-foot {color: #606060 !important; background: #FBFCFF  !important;}
.rg-foot .rg-table tr td {border-right: 1px solid #EAEEF3 !important;  border-top: 1px solid #EAEEF3 !important;}
.rg-focus {border:  2px solid #68B3FC !important;}
.rg-header-focus {background: #E5F2FF !important; color: #6F7479 !important;}
.rg-header .rg-table tr td:hover {background: #68B3FC !important; color: #fff !important;}
.rg-header-select {background: rgb(232 248 240 / 50%) !important;}
.rg-selection { background: rgb(232 248 240 / 35%) !important; border: 1px solid #15BD66!important;}
.rg-editor-container { border: 2px solid #27C382 !important; }*/


/* modal 0630 */

 .modal-dialog{
     border: #ddd 1px solid !important;
     position: fixed;
     top: 50%; /* Adjust the vertical position */
     left: 50%; /* Adjust the horizontal position */
     transform: translate(-50%, -50%);
     width: 80%;
     min-width: 500px;
     max-width: 600px;
     padding: 20px;
     background-color: white;
     border-radius: 2px;
     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}
 .modal-form-content {
     position: relative;
     width: 100%;
     height: 100%;
}
 .modal-search-form {
     display: flex;
     gap: 320px;
     padding: 10px 10px;
     max-width: 1600px;
     background-color: #F7F7F7;
     border: 1px #EDEDED;
     border-radius: 4px;
     margin-bottom: 10px;
}
 .modal-close-button {
     position: absolute;
     top: 1px;
     right: 1px;
     background: transparent;
     border: none;
     font-size: 25px;
     cursor: pointer;
}
 .modal-form-inline {
     display: flex;
     align-items: left;
}
 .modal-label {
     font-size: 15px !important;
     font-weight: bold !important;
     width: 100px !important;
     min-width: 50px !important;
     margin-right: 50px;
     text-align: left;
     color: #4B5E70;
     font-family: 'Pretendard';
     font-size: 13px;
     font-style: normal;
     font-weight: 500;
     line-height: normal;
}
 .modal-select {
     font-family: "Pretendard";
     font-size: 13px;
     padding: 6px 10px 5px 10px;
     max-height: 28px;
     width: calc(100%);
     border-radius: 4px;
     border: 1px solid #E1E8F0;
     color: #7A8692;
     margin-right: 10px;
     max-width: 150px !important;
     min-width: 150px !important;
     -moz-appearance:none;
     -webkit-appearance:none;
     appearance:none;
     background-image: url(icon_arrow_down.png);
     background-repeat: no-repeat;
     background-position-x: 100%;
     background-position-y: 1px;
     line-height: 15px;
     padding: 6px 30px 5px 10px;
}
 .yoko-wid204 {
     font-family: "Pretendard";
     font-size: 13px;
     padding: 6px 10px 5px 10px;
     max-height: 28px;
     border-radius: 4px;
     border: 1px solid #E1E8F0;
     color: #7A8692;
     margin-right: 10px;
     min-width: 150px !important;     
     max-width: 150px !important;
}
 .yoko-table-container {
     border: #ddd 1px solid !important;
     min-height: 200px;
     max-height: 400px;
     overflow-y: auto;
     overflow-x: hidden;
}
 .yoko-search-table {
     width: 100%;
     border-collapse: collapse;
}
 .yoko-search-table tr th {
     color: #4B5E70;
     padding: 3px;
     text-align: center;
     background-color: #f2f2f2;
}
 .yoko-search-table tr td {
     padding: 3px;
     text-align: left;
     border-bottom: 1px solid #ddd;
}

#clicktd {
     color: #1c88f4;
     cursor: pointer;
     text-align: left;
}
 #clicktd:hover {
     font-weight: bold;
     text-decoration: underline;
}



</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>orderintakereportwd</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>orderIntakeReportWd</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	console.log("USER NAME : " + gs.getUser().getDisplayName());
	console.log("SYS ID : " + gs.getUser().getID());
	
	/* TEST DATA */
	/* var oiSysId = '049440b63b3e4210ec3cbf2a85e45afd'; */
	var i;

	if(input && input.initScreen) {
		data.oiSysId = $sp.getParameter("sys_id");
		data.gridUrl = '/x_yergb_bpm_SorinGrid_OI.do?id_o=' + data.oiSysId;
		
		data.itemsFlag = [];
		var grData = new GlideRecord('x_yergb_bpm_flag_master');
		grData.addQuery('module', 'OI Report');
		grData.query();
		var idxF = 0;
		while(grData.next()) {
			console.log(grData.code.toString());	
			data.itemsFlag.push({
				name : grData.code.toString(), 
				checked : grData.active.toString()=='true' ? true : false,
				sysid : grData.sys_id.toString()			
			});
		}
		
		getDetailGridData();
	}
	
	if(input && input.initOiReport && data.oiSysId != '') {
		var oiReportData = new GlideRecord('x_yergb_bpm_oi_report');
		oiReportData.addQuery('sys_id', data.oiSysId);
		oiReportData.query();

		var ordTpCode = '';
		var taxCode = '';
		var payCode = '';
		var industrySysid = '';
		while(oiReportData.next()) { 
			data.oiNum = oiReportData.number.toString();
			data.oiState = oiReportData.state.getDisplayValue().toString();
			data.oiStateCode = oiReportData.state.toString(); 
			data.opener = oiReportData.requestor.user_name.toString();
			data.ExRate = oiReportData.exchange_rate.getDisplayValue().toString(); 
			data.jobTypeSysId = oiReportData.job_type.toString();
			data.dmrClassNm = oiReportData.dmr_class.toString();
			data.dmrAmt = oiReportData.dmr_amount_level.toString();
			data.dmrMP = oiReportData.dmr_mp_level.getDisplayValue().toString();
			data.dmrGP = oiReportData.dmr_gp_level.getDisplayValue().toString();
			data.oiAmtLC = oiReportData.oi_amount_lc.getDisplayValue().toString();
			data.oiAmtTC = oiReportData.oi_amount_tc.getDisplayValue().toString();
			data.gpAmt = oiReportData.gp_amount_lc.getDisplayValue().toString();
			data.mpAmt = oiReportData.mp_amount_lc.getDisplayValue().toString();
			data.gpPerc = oiReportData.gp_percent.getDisplayValue().toString();
			data.mpPerc = oiReportData.mp_gap_percent.getDisplayValue().toString();
			data.totEstCost = oiReportData.total_extended_cost_tc.getDisplayValue().toString();
			data.SONm = oiReportData.sales_office.getDisplayValue().toString();
			data.MUCode = oiReportData.sales_office.mu.getDisplayValue().toString();
			data.soMuCodeSysid = oiReportData.sales_office.mu.toString();
			data.soSysid = oiReportData.sales_office.toString();
			
			data.oiVer = oiReportData.version.toString();
			
/*data.endUserNm = oiReportData.end_user_name.toString();
			data.endUserCountry = oiReportData.end_user_country.toString();
			data.contractorNm = oiReportData.contractor_name.toString();
			data.contractorCountry = oiReportData.contractor_country.toString();*/
			
			data.PONo = oiReportData.customer_po_no.toString();
			
			ordTpCode = oiReportData.order_type.toString();
			taxCode = oiReportData.tax_classification.toString();
			payCode = oiReportData.payment_terms.toString();
			industrySysid = oiReportData.industry.toString();
			
			var grC;
			if(ordTpCode != '') {
				grC = new GlideRecord('x_yergb_bpm_common_code');
				grC.initialize();
				grC.addQuery('category', 'ORDER TYPE');
				grC.addQuery('code', ordTpCode);
				grC.query();
				while(grC.next()) {
					data.orderTypeNm = grC.name.toString();
					data.orderTypeCode = grC.code.toString();
				}
			}
			
			if(taxCode != '') {
				grC = new GlideRecord('x_yergb_bpm_common_code');
				grC.initialize();
				grC.addQuery('category', 'TAX Classification');
				grC.addQuery('code', taxCode);
				grC.query();
				while(grC.next()) {
					data.taxClassNm = grC.name.toString();
					data.taxClassCode = grC.code.toString();
				}
			}
			
			if(payCode != '') {
				grC = new GlideRecord('x_yergb_bpm_common_code');
				grC.initialize();
				grC.addQuery('category', 'PAYMENT TERMS');
				grC.addQuery('code', payCode);
				grC.query();
				while(grC.next()) {
					data.payTermsNm = grC.name.toString();
					data.payTermsCode = grC.code.toString();
				}
			}
			
			if(!isEmpty(industrySysid)) {
				grC = new GlideRecord('x_yergb_bpm_industry_master');
				grC.initialize();
				grC.addQuery('sys_id', industrySysid);
				grC.query();
				while(grC.next()) {
					data.industryNm = grC.industry_name.toString();
					data.industryCode = grC.industry_code.toString();
					data.industrySysId = industrySysid;
				}
			}
			
			/* Job Type */
			if( !isEmpty(data.jobTypeSysId) ) {
				var grJ = new GlideRecord('x_yergb_bpm_common_code');
				grJ.initialize();
				grJ.addQuery('category', 'Job Type');
				grJ.addQuery('sys_id', data.jobTypeSysId);
				grJ.query();
				while(grJ.next()) {
					data.jobTypeNm = grJ.name.toString();
				}	
			}
			
			// get Project type
			data.gridDpProjecttype = [];
			var prjTpR = new GlideRecord('x_yergb_bpm_oi_project_type');
			prjTpR.initialize();
			prjTpR.addQuery('oi_report', data.oiSysId);
			prjTpR.query();
			while(prjTpR.next()) {
				var rP = new GlideRecord('x_yergb_bpm_common_code');
				rP.initialize();
				rP.addQuery('category', 'PJT TYPE');	
				rP.addQuery('sys_id', prjTpR.project_type);
				rP.query();
				while(rP.next()) {
					data.gridDpProjecttype.push({
						'name' : rP.name.toString(),
						'code' : rP.code.toString(),
						'sysid' : rP.sys_id.toString(),
						'perc' : prjTpR.rate_percent.toString()
					});
				}
			}
			
			// get Ansoff type
			data.gridDpAnsoff =[];
			var ansR = new GlideRecord('x_yergb_bpm_oi_ansoff_type');
			ansR.initialize();
			ansR.addQuery('oi_report', data.oiSysId);
			ansR.query();
			while(ansR.next()){
				var aR = new GlideRecord('x_yergb_bpm_ansoff_master');
				aR.initialize();
				aR.addQuery('sys_id', ansR.ansoff_type.toString());
				console.log('LOAD ANSOFF: ' + ansR.ansoff_type.toString());
				aR.query();
				while(aR.next()) {
					data.gridDpAnsoff.push({
						'name' : aR.biz_name.toString(), 
						'desc' : aR.biz_type.toString(),
						'sysid' : aR.sys_id.toString(),
						'perc' : ansR.rate_percent.toString()
					});
				}
			}
			
			data.rfqSysId = oiReportData.rfq_entry.toString();
		}

	}

	if(input && input.initRfqEntry && data.rfqSysId != '') {
		var rfqEntryData = new GlideRecord('x_yergb_bpm_rfq_entry');
		rfqEntryData.addQuery('sys_id', data.rfqSysId);
		rfqEntryData.query();
		while(rfqEntryData.next()) {
			data.rfqNumber = rfqEntryData.number.toString();
			//data.endUser = rfqEntryData.end_user.name.toString();
			data.ProjectNm = rfqEntryData.project_title.toString();
			data.yodaOpportNo = rfqEntryData.yoda_opportunity_no.toString();
			data.quotSysId = rfqEntryData.quotation.toString();
			data.salesMngNm = rfqEntryData.sales_manager.user_name.toString();
			data.salesCompanyNm = rfqEntryData.sales_manager.company.name.toString();
			data.profitCompany = rfqEntryData.profit_company.name.toString();
			data.profitCompanyCode = rfqEntryData.profit_company.u_company_code.toString();
			data.custRFQNo = rfqEntryData.customer_rfq.toString();
			data.contractorDummy = rfqEntryData.contract_name.toString();
			data.enduserDummy = rfqEntryData.end_user_name.toString();
			
			data.endUserNm = rfqEntryData.end_user.getDisplayValue().toString();
			data.enduserDummy = rfqEntryData.end_user_name.toString();
			data.contractorNm = rfqEntryData.contractor.getDisplayValue().toString();
			data.contractorDummy = rfqEntryData.contractor_name.toString();
		}
		
		var rStp = new GlideRecord('sys_process_flow');
		rStp.initialize();
		rStp.addQuery('table', 'x_yergb_bpm_oi_report');
		rStp.query();
		var reqSys = '';
		var reqOrd = '';
		var autSys = '';
		var autOrd = '';
		while(rStp.next()){
			if(rStp.name.toString() == 'requested') {
				reqSys = rStp.sys_id.toString();
				reqOrd = rStp.order.toString();
			} else if(rStp.name.toString() == 'authorize'){
				autSys = rStp.sys_id.toString();
				autOrd = rStp.order.toString();
			}
		}
		
		
		if(data.salesCompanyNm == 'YCN') {
			if(Number(reqOrd) < Number(autOrd)) {
				rStp.initialize();
				rStp.get(reqSys);
				rStp.setValue('order', autOrd);
				rStp.update();
				
				rStp.initialize();
				rStp.get(autSys);
				rStp.setValue('order', reqOrd);
				rStp.update();
				
				data.redirect_sys_id = input.oiSysId;
			}
		}
	}

	if(input && input.initQuotation && data.quotSysId != '') {
		var quotData = new GlideRecord('x_yergb_bpm_quotation');
		quotData.addQuery('sys_id', data.quotSysId);
		quotData.query();

		while(quotData.next()) {
			data.quotNum = quotData.number.toString();
			data.essNo = quotData.ess_sqms_no.getDisplayValue().toString();
			data.currency = quotData.currency_lc.toString();
			data.quotGpAmt = quotData.gp_amount.getDisplayValue().toString();
			data.quotMpAmt = quotData.mp_amount.getDisplayValue().toString();
			data.quotTotEstCost = quotData.total_quote_price.getDisplayValue().toString();
			data.quotMpGapPerc = quotData.mp_gap_percent.getDisplayValue().toString();
			data.quotGpPerc = quotData.gp_percent.getDisplayValue().toString();
		}
	}
	
	/* Header Button Events */ 
	function headerDataSave() {
		console.log('SERVER BTN :: OI UPDATE');
		console.log('JOB:' + getValueOrEmptyString(input.jobTypeSysId));
		oiRptTr.get(input.oiSysId);
		oiRptTr.setValue('job_type', getValueOrEmptyString(input.jobTypeSysId));
		oiRptTr.setValue('dmr_amount_level', getValueOrEmptyString(input.dmrAmt));
		oiRptTr.setValue('dmr_mp_level', getValueOrEmptyString(input.dmrMP));
		oiRptTr.setValue('dmr_gp_level', getValueOrEmptyString(input.dmrGP));
		oiRptTr.setValue('oi_amount_lc', getValueOrEmptyString(input.oiAmtLC));
		oiRptTr.setValue('oi_amount_tc', getValueOrEmptyString(input.oiAmtTC));
		oiRptTr.setValue('gp_amount_lc', getValueOrEmptyString(input.gpAmt));
		oiRptTr.setValue('mp_amount_lc', getValueOrEmptyString(input.mpAmt));
		oiRptTr.setValue('gp_percent', getValueOrEmptyString(input.gpPerc));
		oiRptTr.setValue('mp_gap_percent', getValueOrEmptyString(input.mpPerc));
		oiRptTr.setValue('total_extended_cost_tc', getValueOrEmptyString(input.totEstCost));
		oiRptTr.setValue('customer_po_no', getValueOrEmptyString(input.PONo));
		oiRptTr.setValue('order_type', getValueOrEmptyString(input.orderTypeCode));
		oiRptTr.setValue('tax_classification', getValueOrEmptyString(input.taxClassCode));
		oiRptTr.setValue('payment_terms', getValueOrEmptyString(input.payTermsCode));	
		oiRptTr.setValue('industry', getValueOrEmptyString(input.industrySysId));
		oiRptTr.setValue('sales_office', getValueOrEmptyString(input.soSysid));
		
		oiRptTr.setValue('end_user_name', getValueOrEmptyString(input.endUserNm));
		oiRptTr.setValue('end_user_country', getValueOrEmptyString(input.endUserCountry));
		oiRptTr.setValue('contractor_name', getValueOrEmptyString(input.contractorNm));
		oiRptTr.setValue('contractor_country', getValueOrEmptyString(input.contractorCountry));
		
		//oiRptTr.setValue('version', /*String(Number(input.oiVer) + 1)*/ '1');
		oiRptTr.update();
		// Update status.
		// Update version.

		// Update Project type list
		var prjTR = new GlideRecord('x_yergb_bpm_oi_project_type');
		prjTR.initialize();
		prjTR.addQuery('oi_report', input.oiSysId);
		prjTR.deleteMultiple();
		
		for(var pidx in input.gridDpProjecttype) {
			prjTR.initialize();
			var pObj = input.gridDpProjecttype[pidx];
			if(!isEmpty(pObj.sysid)) {
				prjTR.setValue('oi_report', input.oiSysId);
				prjTR.setValue('project_type', pObj.sysid);
				prjTR.setValue('rate_percent', pObj.perc);
				prjTR.insert();
			} 
		}

		// Update Ansoff type list
		var ansTR = new GlideRecord('x_yergb_bpm_oi_ansoff_type');
		ansTR.initialize();
		ansTR.addQuery('oi_report', input.oiSysId);
		ansTR.deleteMultiple();

		for(var aidx in input.gridDpAnsoff) {
			ansTR.initialize();
			var aObj = input.gridDpAnsoff[aidx];
			if(!isEmpty(aObj.sysid)) {
				ansTR.setValue('oi_report', input.oiSysId);
				ansTR.setValue('ansoff_type', aObj.sysid);
				ansTR.setValue('rate_percent', aObj.perc);
				ansTR.insert();
			}
		}

		// Update Flag list
		var flagR = new GlideRecord('x_yergb_bpm_flag_master')
		//console.log('checked length :' + input.itemsFlag.length);
		for(var k = 0; k<input.itemsFlag.length; k++) {
			console.log('checked:' + input.itemsFlag[k].sysid);
			console.log('checked:' + input.itemsFlag[k].checked);
			flagR.initialize();
			flagR.get(input.itemsFlag[k].sysid);
			if(input.itemsFlag[k].checked == true) {
				flagR.setValue('active', true);
			} else {
				flagR.setValue('active', false);
			}
			flagR.update();
		}
	}
	
	if(input && input.btnHeaderType) {
		console.log(input.btnHeaderType);
		var oiRptTr = new GlideRecord('x_yergb_bpm_oi_report');
		oiRptTr.initialize();

		if(input.btnHeaderType == 'oiInsert') {
			console.log('SERVER BTN :: OI INSERT');
			oiRptTr.setValue('oi_amount_lc', getValueOrEmptyString(input.oiAmtLC));
			oiRptTr.setValue('oi_amount_tc', getValueOrEmptyString(input.oiAmtTC));
			oiRptTr.setValue('gp_amount_lc', getValueOrEmptyString(input.gpAmt));
			oiRptTr.setValue('mp_amount_lc', getValueOrEmptyString(input.mpAmt));
			oiRptTr.setValue('gp_percent', getValueOrEmptyString(input.gpPerc));
			oiRptTr.setValue('mp_gap_percent', getValueOrEmptyString(input.mpPerc));
			oiRptTr.setValue('total_extended_cost_tc', getValueOrEmptyString(input.totEstCost));
			oiRptTr.setValue('customer_po_no', getValueOrEmptyString(input.PONo));
			oiRptTr.setValue('sales_office', getValueOrEmptyString(input.soSysid));
			//oiRptTr.setValue('version', String(Number(input.oiVer) + 1));
			oiRptTr.insert();
			data.redirect_sys_id = oiRptTr.getUniqueValue();
		} else if(input.btnHeaderType == 'oiUpdate') {
			headerDataSave();
		} else if(input.btnHeaderType == 'request') {
			console.log('SERVER BTN REQUEST');
			headerDataSave();
			
			oiRptTr.get(input.oiSysId);
			oiRptTr.setValue('state', '3');
			oiRptTr.update();
		} else if(input.btnHeaderType == 'autorize') {
			console.log('SERVER BTN AUTHORIZE');
			
			headerDataSave();
			oiRptTr.get(input.oiSysId);
			oiRptTr.setValue('state', '6');
			oiRptTr.update();
		} else if(input.btnHeaderType == 'cancel') {
			console.log('SERVER BTN CANCEL');
			
			headerDataSave();
			oiRptTr.get(input.oiSysId);
			oiRptTr.setValue('state', '-8');
			oiRptTr.update();
		} 
		
		data.redirect_sys_id = input.oiSysId;
	}
	function isEmpty(str){
		if(typeof str == "undefined" || str == null || str == "")
			return true;
		else
			return false ;
	}
	
	
	function getValueOrEmptyString(value) {
		return typeof value === 'undefined' ? '' : value;
	}
	
	/* Detail grid data */
	function getDetailGridData() {
		var oiDetail = new GlideRecord('x_yergb_bpm_order_item');
		oiDetail.addQuery('oi_report', data.oiSysId);
		oiDetail.query();

		var gridDetailData = [];
		while(oiDetail.next()) {
			gridDetailData.push( {
				'rowStat' : '',
				'sys_id' : oiDetail.sys_id.toString(), 
				'number' : oiDetail.number.toString(), 
				'wbs_6' : oiDetail.wbs_6.getDisplayValue(),
				'ms_code' : oiDetail.ms_code.toString(), 
				'description' : oiDetail.description.toString(), 
				'quantity' :oiDetail.quantity.toString(), 
				'unit_price' :oiDetail.unit_price.toString(), 
				'extended_price' : oiDetail.extended_price.toString(), 
				'unit_cost' : oiDetail.unit_cost.toString(),
				'extended_cost' : oiDetail.extended_cost.toString(),
				'unit_mp' : oiDetail.unit_mp.toString(), 
				'mp_amount' : oiDetail.mp_amount.toString(), 
				'vendor' : oiDetail.vendor.getDisplayValue(),
				'oi_report_num' : oiDetail.oi_report.number.toString(),
				'oi_report_sys_Id' : oiDetail.oi_report.toString()
			});
		} 
		
		data.gridDetailData = gridDetailData;
	}
	
	if(input && input.gridBtnTransact) {
		if(input.gridBtnTransact == 'T') {
			console.log('SERVER GRID SAVE : ' + input.gridDetailData);
			var gData = input.gridDetailData;
			for(var x=0; x<gData.length; x++) {
				var ordItem = new GlideRecord('x_yergb_bpm_order_item');
				ordItem.initialize();
				var rStat = gData[x].rowStat;
				if(rStat == 'deleted') {
					ordItem.get(gData[x].sys_id);
					ordItem.deleteRecord();
				} else if(rStat == 'updated') {
					ordItem.get(gData[x].sys_id);
					ordItem.setValue('wbs_6', gData[x].wbs_6_sysid);
					ordItem.setValue('ms_code', gData[x].ms_code);
					ordItem.setValue('description', gData[x].description);
					ordItem.setValue('quantity', gData[x].quantity);
					ordItem.setValue('unit_price', gData[x].unit_price);
					ordItem.setValue('unit_cost', gData[x].unit_cost);
					ordItem.setValue('unit_mp', gData[x].unit_mp);
					ordItem.setValue('vendor', gData[x].vendor_sysid);
					ordItem.update();
				} else if(rStat == 'created') {
					ordItem.setValue('wbs_6', gData[x].wbs_6_sysid);
					ordItem.setValue('ms_code', gData[x].ms_code);
					ordItem.setValue('description', gData[x].description);
					ordItem.setValue('quantity', gData[x].quantity);
					ordItem.setValue('unit_price', gData[x].unit_price);
					ordItem.setValue('unit_cost', gData[x].unit_cost);
					ordItem.setValue('unit_mp', gData[x].unit_mp);
					ordItem.setValue('vendor', gData[x].vendor_sysid);
					ordItem.setValue('oi_report', input.oiSysId);
					ordItem.insert();
				} 
			}
			
			data.redirect_sys_id = input.oiSysId;
		}
	}
	
	/* Order type Modal */
	if(input && input.modalOrderType) {
		data.itemsOrdertype = [];
		var grOrdType;
		if(input && input.modalTypeOrderType) {
			grOrdType = new GlideRecord('x_yergb_bpm_common_code');
			grOrdType.addQuery('category', 'ORDER TYPE');
			grOrdType.addEncodedQuery(input.modalQuery);
		} else if(input && input.modalTypeTaxClass) {
			grOrdType = new GlideRecord('x_yergb_bpm_common_code');
			grOrdType.addQuery('category', 'TAX Classification');
			grOrdType.addEncodedQuery(input.modalQuery);
		} else if(input && input.modalTypeIndustry) {
			grOrdType = new GlideRecord('x_yergb_bpm_industry_master');
			if(!isEmpty(input.MUCode)) {
				grOrdType.addQuery('mu', input.soMuCodeSysid);
				console.log('SERV INDUSTRY MU : ' + input.soMuCodeSysid);
			}
			grOrdType.addEncodedQuery(input.modalQuery);
		} else if(input && input.modalTypePayTerms) {
			grOrdType = new GlideRecord('x_yergb_bpm_common_code');
			grOrdType.addQuery('category', 'PAYMENT TERMS');
			grOrdType.addEncodedQuery(input.modalQuery);
		}
		
		grOrdType.query();
		while(grOrdType.next()) {
			if(input && input.modalTypeIndustry) {
				data.itemsOrdertype.push({
					type : "3", 
					name : grOrdType.industry_name.toString(), 
					code : grOrdType.industry_code.toString(),
					sysid : grOrdType.sys_id.toString()
				});
			} else if(input && input.modalTypeOrderType) {
				data.itemsOrdertype.push({
					type : "1",
					name : grOrdType.name.toString(), 
					code : grOrdType.code.toString()
				});
			} else if(input && input.modalTypeTaxClass) {
				data.itemsOrdertype.push({
					type : "2",
					name : grOrdType.name.toString(), 
					code : grOrdType.code.toString()
				});
			} else if(input && input.modalTypePayTerms) {
				data.itemsOrdertype.push({
					type : "4",
					name : grOrdType.name.toString(), 
					code : grOrdType.code.toString()
				});
			}
		}
	}
	

	
	/* Project type Modal */
	if(input && input.modalProjectType) {
		data.itemsProjecttype = [];
		var grPjtType = new GlideRecord('x_yergb_bpm_common_code');
		grPjtType.addQuery('category', 'PJT TYPE');	
		grPjtType.addEncodedQuery(input.modalQuery);
		/*if(!isEmpty(input.MUCode)) {
			grPjtType.addQuery('mu_code', input.soMuCodeSysid);
		}*/
		grPjtType.query();
		while(grPjtType.next()) {
			data.itemsProjecttype.push({
				name : grPjtType.name.toString(),
				code : grPjtType.code.toString(), 
				sysid : grPjtType.sys_id.toString()
			});
		}
	}
	
	/* Ansoff Modal */
	if(input && input.modalAnsoff) {
		data.itemsAnsoff = [];
		var grAnsoff = new GlideRecord('x_yergb_bpm_ansoff_master');
		grAnsoff.addEncodedQuery(input.modalQuery);
		if(!isEmpty(input.MUCode)) {
			grAnsoff.addQuery('mu', input.soMuCodeSysid);
		}
		grAnsoff.query();
		while(grAnsoff.next()) {
				data.itemsAnsoff.push({
					desc : grAnsoff.biz_name.toString(),
					name : grAnsoff.biz_type.toString(),
					sysid : grAnsoff.sys_id.toString()
				});
		}
	}
	
	/* Vendor Modal */
	if(input && input.modalVendor) {
		data.itemsVendor = [];
		var grVendor = new GlideRecord('core_company');
		grVendor.addEncodedQuery(input.modalQuery);
		grVendor.query();
		while(grVendor.next()) {
				data.itemsVendor.push({
					desc : grVendor.country.toString(),
					name : grVendor.name.toString(),
					sysid : grVendor.sys_id.toString()
				});
		}
	}
	
	/* WBS Modal */
	if(input && input.modalWbs) {
		data.itemsWbs = [];
		var grWbs = new GlideRecord('x_yergb_bpm_wbs_master');
		grWbs.addEncodedQuery(input.modalQuery);
		grWbs.query();
		while(grWbs.next()) {
				data.itemsWbs.push({
					desc : grWbs.description.toString(),
					code : grWbs.code.toString(),
					sysid : grWbs.sys_id.toString()
				});
		}
	}
	
	/* Job type Modal */
	if(input && input.modalDmrType=='JOB') {
		data.itemsJobType = [];
		var rJob = new GlideRecord('x_yergb_bpm_common_code');
		rJob.initialize();
		rJob.addQuery('category', 'Job Type');
		rJob.addEncodedQuery(input.modalQuery);
		rJob.query();
		while(rJob.next()) {
			data.itemsJobType.push({
				name : rJob.name.toString(),
				code : rJob.code.toString(),
				sysid : rJob.sys_id.toString()
			});
		}
	}
	
	/* Sales office Modal */ 
	if(input && input.modalSalesOffice){		
		data.itemsSalesOffice = [];
		var grSO = new GlideRecord('x_yergb_bpm_sales_office');
		grSO.addEncodedQuery(input.modalQuery);
		grSO.query();
		while(grSO.next()) {
			data.itemsSalesOffice.push({
				name : grSO.name.toString(),
				muCode : grSO.mu.getDisplayValue().toString(),
				sysid : grSO.sys_id.toString(),
				muSysid : grSO.mu.toString()
				//soMuCodeSysid
			});
		}
	}
	
	/* End User */
	if(input && input.modalEndUser){		
		data.itemsEndUser = [];
		var grEuser = new GlideRecord('core_company');
		grEuser.addEncodedQuery(input.modalQuery);
		if(!isEmpty(input.profitCompany )) {
			grEuser.addQuery('u_sales_org', input.profitCompanyCode);
		}
		grEuser.query();
		while(grEuser.next()) {
			data.itemsEndUser.push({
				name : grEuser.name.toString(),
				code : grEuser.u_company_code.toString(),
				sys_id : grEuser.sys_id.toString()
			});
		}
	}
	
	/* Constructor */
	if(input && input.modalContractor){		
		data.itemsContractor = [];
		var grConst = new GlideRecord('core_company');
		grConst.addEncodedQuery(input.modalQuery);
		if(!isEmpty(input.profitCompany )) {
			grConst.addQuery('u_sales_org', input.profitCompanyCode);
		}
		grConst.query();
		while(grConst.next()) {
			data.itemsContractor.push({
				name : grConst.name.toString(),
				code : grConst.u_company_code.toString(),
				sys_id : grConst.sys_id.toString()
			});
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-19 00:41:05</sys_created_on>
        <sys_id>0bf3cf7283720210b3dd1665eeaad343</sys_id>
        <sys_mod_count>1243</sys_mod_count>
        <sys_name>orderIntakeReportWd</sys_name>
        <sys_package display_value="BPM" source="x_yergb_bpm">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_package>
        <sys_policy/>
        <sys_scope display_value="BPM">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_scope>
        <sys_update_name>sp_widget_0bf3cf7283720210b3dd1665eeaad343</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-01 16:39:06</sys_updated_on>
        <template><![CDATA[<!--<link id="style-link" href="https://cdn.jsdelivr.net/gh/flowmt/sample/dist/realgrid-style.css" rel="stylesheet"/>
<script defer type="text/javascript" src="https://cdn.jsdelivr.net/gh/flowmt/sample/dist/realgrid.2.7.2.min.js"> </script>
<script defer>
  var realGrid2Lic = 'upVcPE+wPOmtLjqyBIh9RkM/nBOseBrflwxYpzGZyYkkSQt0t0CTeCSk1qaDqTRZ5JoV9H143uMO5+/xJSE3Lj4YewEIhlh/';
</script>-->

<div>
  <div class="yoko-container">
        <div class="yoko-title-btn-wrap">
            <h1 class="yoko-title">OI Report Creation & Request</h1>
          	<div class="yoko-btn-wrap">
                <button class="yoko-btn yoko-btn-outline" ng-if='c.data.showBtnCancel' ng-click="btnHeader('cancel')">Cancel</button>
                <button class="yoko-btn yoko-btn-outline" ng-if='c.data.showBtnSave' ng-click="btnHeader('save')">Save</button>
                <button class="yoko-btn yoko-btn-outline" ng-if='c.data.showBtnRequest' ng-click="btnHeader('request')">Request</button>
              	<button class="yoko-btn yoko-btn-outline" ng-if='c.data.showBtnAuthorize' ng-click="btnHeader('autorize')">Authorize</button>
            </div>
        </div>
        <div class="yoko-content">
            <div class="yoko-search-form-wrap">
                <div class="yoko-search-form">
                    <div class="yoko-form-col">
                        <div class="yoko-form-group">
                            <label for="oi_no" class="yoko-short">OI No.</label>
                            <input type="text" name="inputOINo" value="" ng-model="c.data.oiNum" placeholder="" disabled class="yoko-wid140">
                        </div>
                        <div class="yoko-form-group">
                            <label for="version" class="yoko-short">Version</label>
                            <input type="text" name="inputVersion" value="" ng-model="c.data.oiVer" placeholder="" disabled class="yoko-wid140">
                        </div>
                        <div class="yoko-form-group">
                            <label for="opened_by" class="yoko-short">opened by</label>
                            <input type="text" name="inputOpener" value="" ng-model="c.data.opener" placeholder="" disabled class="yoko-wid140">
                        </div>
                      	<div class="yoko-form-group">
                        <div class="yoko-form-group">
                            <label for="lbQuotationNo" class="yoko-short">Quotation No</label>
                            <input type="text" name="inputQuotationNo" value="" ng-model="c.data.quotNum" placeholder="" disabled class="yoko-wid140">
                          </div>
                      	</div>
                        <div class="yoko-form-group">
                            <label for="lbQuotationNo" class="yoko-short">Profit company</label>
                            <input type="text" name="inputProfitCompany" value="" ng-model="c.data.profitCompany" placeholder="" disabled class="yoko-wid140">
                          	<input type='hidden' value='' ng-model='c.data.profitCompanyCode'>
                      	</div>
                    </div>
                    
                    <div class="yoko-form-col">
                        <div class="yoko-form-group">
                            <label for="state" class="yoko-short-110">State</label>
                            <input type="text" name="inputState" value="" ng-model="c.data.oiState" placeholder="" class="yoko-wid308" disabled>
                          	<input type='hidden' name='inppuStateCode' ng-model='c.data.oiStateCode'>
                        </div>
                        <div class="yoko-form-group">
                            <label for="sales_manager" class="yoko-short-110">Sales Manager</label>
                            <div class="yoko-form-inline yoko-wid308">
                                <input type="text" name="inputSalesMngNm" value="" ng-model="c.data.salesMngNm" placeholder="" disabled class="yoko-wid100">
                                <input type="text" name="inputSalesMngNum" value="" ng-model="c.data.salesMngNum" placeholder="" disabled class="">
                              	<input type='hidden' value='' ng-model='c.data.salesCompanyNm' > 
                            </div>
                        </div>
                        <!--<div class="yoko-form-group">
                            <label for="sales_office" class="yoko-short-110">Sales Office</label>
                            <div class="yoko-form-inline yoko-wid308">
                                <div class="yoko-form-inline">
                                    <input type="text" name="inputSalesOffice" value="" ng-model="c.data.SONm" ng-disabled='c.data.disSONm' placeholder="" 
                                           class="yoko-wid100" ng-keypress="onKeyPressed($event, 'SO')">
                                    <button type="button" class="yoko-btn yoko-btn-search"  ng-click="btnClickSOSearch()" ng-disabled='c.data.disSONmSearch'></button>
                                    <button type="button" class="yoko-btn yoko-btn-info-fill" hidden ng-click="btnClickSOInfo()" ng-disabled='c.data.disSONmInfo'></button>
                                </div>
                                <input type="text" name="inputSONum" value="" ng-model='c.data.MUCode' placeholder="" disabled class="">
                              	<input type='hidden' value='' ng-model='c.data.soSysid'>
                              	<input type='hidden' value='' ng-model='c.data.soMuCodeSysid'>
                            </div>
                        </div>-->
                        <div class="yoko-form-group">
                            <label for="lbCustPONo" class="yoko-short-110">Customer PO No</label>
                            <input type="text" name="inputCustPONo" value="" ng-model="c.data.PONo" placeholder="" class="yoko-wid308" ng-disabled='c.data.disCustPONo'>
                        </div>
                      	<div class="yoko-form-group">
                          <label for="lbEssSqmsNo" class="yoko-short-110">ESS/SQMS No.</label>
                          <input type="text" name="inputEssSqmsNo" value="" ng-model="c.data.essNo" placeholder="" disabled class="yoko-wid308">
                      	</div>
                    </div>

                    <div class="yoko-form-col">
                      	<div class="yoko-form-group">
                          <label for="lbCurrency" class="yoko-short-100">Currency</label>
                          <input type="text" name="inputCurrency" value="" ng-model="c.data.currency" placeholder="" disabled class="yoko-wid140">
                      	</div>
                        <div class="yoko-form-group">
                            <label for="lbExRate" class="yoko-short-100">Ex. Rate</label>
                            <input type="text" name="inputExRate" value="" ng-model="c.data.ExRate" laceholder="" disabled class="yoko-wid140 yoko-text-right">
                        </div>
                        <div class="yoko-form-group">
                            <label for="lbOIAmountTC" class="yoko-short-100">OI Amount(TC)</label>
                            <input type="text" name="inputOIAmountTC" value="" ng-model="c.data.oiAmtTC" ng-disabled='c.data.disOiAmtTC' placeholder="" class="yoko-wid140 yoko-text-right">
                        </div>
                        <div class="yoko-form-group">
                            <label for="oi_amount_lc" class="yoko-short-100">OI Amount(LC)</label>
                            <input type="text" name="inputOIAmountLC" value="" ng-model="c.data.oiAmtLC" ng-disabled='c.data.disOiAmtLC' placeholder="" class="yoko-wid140 yoko-text-right">
                        </div>
                        <div class="yoko-form-group">
                            <label for="total_est_cost" class="yoko-short-100">Total Est. Cost</label>
                            <input type="text" name="inputTotEstCost" value="" ng-model="c.data.totEstCost" ng-disabled='c.data.disTotEstCost' laceholder="" class="yoko-wid140 yoko-text-right">
                        </div>
                    </div>
                    <div class="yoko-form-col">
                        <div class="yoko-form-group">
                            <label for="lbGpAmount" class="yoko-short">GP Amount</label>
                            <input type="text" name="inputGpAmount" value="" ng-model="c.data.gpAmt" ng-disabled='c.data.disGpAmt' placeholder="" class="yoko-wid140 yoko-text-right">
                        </div>
                        <div class="yoko-form-group">
                            <label for="lbMpAmount" class="yoko-short">MP Price</label>
                            <input type="text" name="inputMpAmount" value="" ng-model="c.data.mpAmt" ng-disabled='c.data.disMpAmt' placeholder="" class="yoko-wid140 yoko-text-right">
                        </div>
                        <div class="yoko-form-group">
                            <label for="lbGPRatio" class="yoko-short">GP %</label>
                            <input type="text" name="inputGPRatio" value="" ng-model="c.data.gpPerc" ng-disabled='c.data.disGpPerc' placeholder="" class="yoko-wid140 yoko-text-right">
                        </div>
                        <div class="yoko-form-group">
                            <label for="lbMPRatio" class="yoko-short">MP Gap %</label>
                            <input type="text" name="inputMPRatio" value="" ng-model="c.data.mpPerc" ng-disabled='c.data.disMpPerc' placeholder="" class="yoko-wid140 yoko-text-right">
                        </div>
                    </div>
                </div>
            </div>           
          	
            <div class="yoko-search-form-wrap">
                <div class="yoko-search-form-heading yoko-fold-btn-wrap">
                    <button type="button" data-target="RFQEntry" class="yoko-btn yoko-btn-fold"></button> 
                  	Quotation Request
                </div>
                <div class="RFQ-entry-wrap" id="RFQEntry">
                    <div class="yoko-search-form yoko-padding24">
                        <div class="yoko-form-col">
                            <div class="yoko-form-group">
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-group">
                                        <label for="lbRfqNo" class="yoko-short-90">RFQ No.</label>
                                        <input type="text" name="inputRfqNo" value="" ng-model="c.data.rfqNumber" placeholder="" disabled class="yoko-wid140">
                                    </div>
                                    <div class="yoko-form-group">
                                        <label for="lbCustomerPoNo" class="yoko-short-120">Customer RFQ No.</label>
                                        <input type="text" name="inputCustomerPoNo" value="" ng-model="c.data.custRFQNo" placeholder="" disabled class="yoko-wid140">
                                    </div>
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbYodaPportunity" class="yoko-short-90">YODA Opportunity</label>
                                <input type="text" name="inputYodaPportunity" value="" ng-model="c.data.yodaOpportNo" placeholder="" disabled class="yoko-col100">
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbProjectName" class="yoko-short-90">Project Name</label>
                                <input type="text" name="inputProjectName" value="" ng-model="c.data.ProjectNm" placeholder="" disabled class="yoko-col100">
                            </div>
                          	<div class="yoko-form-group">
                              <label for="sales_office" class="yoko-short-90">Sales Office</label>
                              <div class="yoko-form-inline yoko-wid308">
                                  <div class="yoko-form-inline">
                                      <input type="text" name="inputSalesOffice" value="" ng-model="c.data.SONm" ng-disabled='c.data.disSONm' placeholder="" 
                                             class="yoko-wid180" ng-keypress="onKeyPressed($event, 'SO')">
                                      <button type="button" class="yoko-btn yoko-btn-search"  ng-click="btnClickSOSearch()" ng-disabled='c.data.disSONmSearch'></button>
                                      <button type="button" class="yoko-btn yoko-btn-info-fill" hidden ng-click="btnClickSOInfo()" ng-disabled='c.data.disSONmInfo'></button>
                                  </div>
                                  <input type="text" name="inputSONum" value="" ng-model='c.data.MUCode' placeholder="" disabled class="">
                                  <input type='hidden' value='' ng-model='c.data.soSysid'>
                                  <input type='hidden' value='' ng-model='c.data.soMuCodeSysid'>
                            	</div>
                       		  </div>
                        </div>
                        <div class="yoko-form-col">
                          	<div class="yoko-form-group">
                              <label for="constructor" class="yoko-short-110">Contractor</label>
                              <div class="yoko-form-inline yoko-wid308">
                                  <div class="yoko-form-inline">
                                      <input type="text" name="inputConstructorNm" value="" ng-model="c.data.contractorNm" ng-disabled='c.data.disConstrucNm' placeholder="" class="yoko-wid100"
                                             ng-keypress="onKeyPressed($event, 'Contractor')">
                                      <button type="button" class="yoko-btn yoko-btn-search"  ng-click="btnClickContractorSearch()" ng-disabled='c.data.disConstrucNm'></button>
                                  </div>
                                  <input type="text" name="inputConstructorCountry" value="" ng-model='c.data.contractorCountry' placeholder="" disabled class="">
                                	<input type='hidden' value='' ng-model='c.data.contractorSysid' >
                              </div>
                          	</div>   
                            <div class="yoko-form-group">
                              <label for="end_user" class="yoko-short-110">End User</label>
                              <div class="yoko-form-inline yoko-wid308">
                                  <div class="yoko-form-inline">
                                      <input type="text" name="inputEndUserNm" value="" ng-model="c.data.endUserNm" ng-disabled='c.data.disEndUser' placeholder="" class="yoko-wid100"
                                             ng-keypress="onKeyPressed($event, 'EndUser')"> 
                                      <button type="button" class="yoko-btn yoko-btn-search"  ng-click="btnClickEndUserSearch()" ng-disabled='c.data.disEndUserNm'></button>
                                  </div>
                                  <input type="text" name="inputEndUserCountry" value="" ng-model='c.data.endUserCountry' placeholder="" disabled class="">
                                	<input type='hidden' value='' ng-model='c.data.endUserSysid' >
                              </div>
                          	</div>	
                            <div class="yoko-form-group">
                                <label for="lbDummyAccount" class="yoko-short-110">Contractor Dummy</label>
                                <input type="text" name="inputDummyAccount" value="" ng-model="c.data.contractorDummy" placeholder="" disabled class="yoko-col100">
                            </div>
                          	<div class="yoko-form-group">
                                <label for="lbDummyAccount" class="yoko-short-110">End User Dummy</label>
                                <input type="text" name="inputDummyAccount" value="" ng-model="c.data.enduserDummy" placeholder="" disabled class="yoko-col100">
                            </div>
                            
                        </div>
                        <div class="yoko-form-col">
                            <div class="yoko-form-group">
                                <label for="lbSalesTerritory" class="yoko-short-130">Sales Territory</label>
                                <input type="text" name="inputSalesTerritory" value="" ng-model="c.data.salesTerrit" placeholder="" disabled class="yoko-wid140">
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbTCAS" class="yoko-short-130">T-CAS</label>
                                <input type="text" name="inputTCAS" value="" ng-model="c.data.tcas" placeholder="" disabled class="yoko-wid140">
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbRiskMgmtCategory" class="yoko-short-130">Risk Mgmt Category</label>
                                <input type="text" name="inputRiskMgmtCategory" value="" ng-model="c.data.ristMgnt" placeholder="" disabled class="yoko-wid140">
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbCreditAssessment" class="yoko-short-130">Credit Assessment</label>
                                <input type="text" name="inputCreditAssessment" value="" ng-model="c.data.creditAss" placeholder="" disabled class="yoko-wid140">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="yoko-search-form-wrap">
                <div class="yoko-search-form-heading yoko-fold-btn-wrap">
                    <button type="button" data-target="additionalInformation" class="yoko-btn yoko-btn-fold"></button>
                  	Additional Information
                </div>
                <div class="additional-information-wrap" id="additionalInformation">
                    <div class="yoko-search-form yoko-padding24">
                        <div class="yoko-form-col">
                            <div class="yoko-form-group-heading-wrap">
                                <div class="yoko-form-group-heading">Order Type</div>
                                <div class="yoko-form-group-line"></div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbOrderType" class="yoko-short-100">Order Type</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputOrderType" value="" ng-model="c.data.orderTypeNm" ng-disabled='c.data.disOrdType' placeholder="" class="yoko-wid100"
                                               ng-keypress="onKeyPressed($event, 'OrderType')">
                                        <button type="button" class="yoko-btn yoko-btn-search" ng-disabled='c.data.disOrdType' ng-click="btnClickOrdTypeSearch(1)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-info-fill" ng-disabled='c.data.disOrdType' ng-click="btnClickOrdTypeInfo(1)"></button>
                                    </div>
                                    <input type="text" name="inputOrderTypeCode" value="" ng-model="c.data.orderTypeCode" placeholder="" disabled class="yoko-wid140">
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbTaxClass" class="yoko-short-100">TAX Class</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputTaxClassNm" value="" ng-model="c.data.taxClassNm" ng-disabled='c.data.disTaxClass' placeholder="" class="yoko-wid100"
                                               ng-keypress="onKeyPressed($event, 'TaxClass')">
                                        <button type="button" class="yoko-btn yoko-btn-search" ng-disabled='c.data.disTaxClass' ng-click="btnClickOrdTypeSearch(2)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-info-fill" ng-disabled='c.data.disTaxClass' ng-click="btnClickOrdTypeInfo(2)"></button>
                                    </div>
                                    <input type="text" name="inputTaxClassDesc" value="" ng-model="c.data.taxClassCode" placeholder="" disabled class="yoko-wid140">
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbIndustry" class="yoko-short-100">Industry</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputIndustryNm" value="" ng-model="c.data.industryNm" ng-disabled='c.data.disIndustry' placeholder="" class="yoko-wid100"
                                               ng-keypress="onKeyPressed($event, 'Industry')">
                                        <button type="button" class="yoko-btn yoko-btn-search" ng-disabled='c.data.disIndustry' ng-click="btnClickOrdTypeSearch(3)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-info-fill" ng-disabled='c.data.disIndustry' ng-click="btnClickOrdTypeInfo(3)"></button>
                                    </div>
                                    <input type="text" name="inputIndustryCode" value="" ng-model="c.data.industryCode" placeholder="" disabled class="yoko-wid140">
                                  	<input type='hidden' value='' ng-model='c.data.industrySysId' >
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbPaymentTerms" class="yoko-short-100">Payment Terms</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputPaymentTermsNm" value="" ng-model="c.data.payTermsNm" ng-disabled='c.data.disPayTerm' placeholder="" class="yoko-wid100"
                                               ng-keypress="onKeyPressed($event, 'PayTerm')">
                                        <button type="button" class="yoko-btn yoko-btn-search" ng-disabled='c.data.disPayTerm' ng-click="btnClickOrdTypeSearch(4)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-info-fill" ng-disabled='c.data.disPayTerm' ng-click="btnClickOrdTypeInfo(4)"></button>
                                    </div>
                                    <input type="text" name="inputPaymentTermsCode" value="" ng-model="c.data.payTermsCode" placeholder="" disabled class="yoko-wid140">
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="maturity_days" class="yoko-short-100">E-Draft Maturity Days</label>
                                <input type="text" name="inputMaturityDays" value="" ng-model="c.data.MaturityDays" ng-disabled='c.data.disMaturDays' placeholder="" class="yoko-col100">
                            </div>
                        </div>
                        <div class="yoko-form-col">
                            <div class="yoko-form-group-heading-wrap">
                                <div class="yoko-form-group-heading">DMR</div>
                                <div class="yoko-form-group-line"></div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbJobType" class="yoko-short">Job Type</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputJobType" value="" ng-model='c.data.jobTypeNm' ng-disabled='c.data.disJobType' placeholder="" class="yoko-wid100"
                                               ng-keypress="onKeyPressed($event, 'JobType')">
                                        <button type="button" class="yoko-btn yoko-btn-search" ng-disabled='c.data.disJobType' ng-click="btnClickDMRSearch(1)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-info-fill" ng-disabled='c.data.disJobType' ng-click="btnClickDMRInfo(1)"></button>
                                      	<input type='hidden' value='' ng-model='c.data.jobTypeSysId'>
                                    </div>
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbDmrClass" class="yoko-short">DMR Class</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputDmrClass" value="" ng-model="c.data.dmrClassNm" ng-disabled='c.data.disDmrClass' placeholder="" class="yoko-wid100">
                                        <button type="button" class="yoko-btn yoko-btn-search" ng-disabled='c.data.disDmrClass' ng-click="btnClickDMRSearch(2)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-info-fill" ng-disabled='c.data.disDmrClass' ng-click="btnClickDMRInfo(2)"></button>
                                    </div>
                                    <input type="text" name="inputDmrClassNm" value="" ng-model="c.data.DmrClassCode" placeholder="" disabled class="yoko-wid140">
                                </div>
                            </div>
                          	<div class="yoko-form-group">
                                <label for="lbDmrClass" class="yoko-short">Amount Level</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputDmrAmt" value="" ng-model="c.data.dmrAmt" ng-disabled='c.data.disDmrClass' placeholder="" class="yoko-wid300">
                                    </div>
                                </div>
                            </div>
                          	<div class="yoko-form-group">
                                <label for="lbDmrClass" class="yoko-short">MP Level</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputDmrMP" value="" ng-model="c.data.dmrMP" ng-disabled='c.data.disDmrClass' placeholder="" class="yoko-wid300">
                                    </div>
                                </div>
                            </div>
                          	<div class="yoko-form-group">
                                <label for="lbDmrClass" class="yoko-short">GP Level</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputDmrGP" value="" ng-model="c.data.dmrGP" ng-disabled='c.data.disDmrClass' placeholder="" class="yoko-wid300">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="yoko-form-col">
                            <div class="yoko-form-group-heading-wrap">
                                <div class="yoko-form-group-heading">Attachment</div>
                                <div class="yoko-form-group-line"></div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbContractLoi" class="yoko-short-130">Contract (PO) or LOI</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputContractLoi" value="" ng-model="c.data.attPO" ng-disabled='c.data.disAttPO' placeholder="" class="yoko-wid140">
                                        <button type="button" class="yoko-btn yoko-btn-attach" ng-disabled='c.data.disAttPO' ng-click="btnClickAttAdd(1)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-delete" ng-disabled='c.data.disAttPO' ng-click="btnClickAttDel(1)"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbQuotBOM" class="yoko-short-130">Quotation or BOM</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputQuotBOM" value="" ng-model="c.data.attBOM" ng-disabled='c.data.disAttBOM' placeholder="" class="yoko-wid140">
                                        <button type="button" class="yoko-btn yoko-btn-attach" ng-disabled='c.data.disAttBOM' ng-click="btnClickAttAdd(2)" ></button>
                                        <button type="button" class="yoko-btn yoko-btn-delete" ng-disabled='c.data.disAttBOM' ng-click="btnClickAddDel(2)"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbEssSqms" class="yoko-short-130">ESS/SQMS</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputEssSqms" value="" ng-model="c.data.attESS" ng-disabled='c.data.disAttESS' placeholder="" class="yoko-wid140">
                                        <button type="button" class="yoko-btn yoko-btn-attach" ng-disabled='c.data.disAttESS' ng-click="btnClickAttAdd(3)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-delete" ng-disabled='c.data.disAttESS' ng-click="btnClickAddDel(3)"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="yoko-form-group">
                                <label for="lbEtc" class="yoko-short-130">Etc</label>
                                <div class="yoko-form-inline">
                                    <div class="yoko-form-inline">
                                        <input type="text" name="inputEtc" value="" ng-model="c.data.attEtc" ng-disabled='c.data.disAttEtc' placeholder="" class="yoko-wid140">
                                        <button type="button" class="yoko-btn yoko-btn-attach" ng-disabled='c.data.disAttEtc' ng-click="btnClickAttAdd(4)"></button>
                                        <button type="button" class="yoko-btn yoko-btn-delete" ng-disabled='c.data.disAttEtc' ng-click="btnClickAddDel(4)"></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="yoko-search-form-wrapper yoko-mt-20">
                        <div class="yoko-flex-responsive yoko-col100">
                            <div class="yoko-search-form-wrapper yoko-col100">
                                <div class="yoko-search-form-wrap yoko-col50">
                                    <div class="yoko-search-form yoko-padding-r20">
                                        <div class="yoko-form-col">
                                            <div class="yoko-form-group-heading-wrap">
                                                <div class="yoko-form-group-heading">Project Type</div>
                                                <div class="yoko-form-group-line"></div>
                                                <button type="button" ng-click="gridProjectTypeBtnClick('add')" class="yoko-btn yoko-btn-add"></button>
                                                <button type="button" ng-click="gridProjectTypeBtnClick('del')" class="yoko-btn yoko-btn-delete"></button>
                                              	<span> </span>
                                            </div>
                                            <div class="yoko-ht100 yoko-scroll">
                                                <div id='gridProjectType' style="width: 480px; height: 105px;"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="yoko-search-form-wrap yoko-col50">
                                    <div class="yoko-search-form yoko-padding-r20">
                                        <div class="yoko-form-col">
                                            <div class="yoko-form-group-heading-wrap">
                                                <div class="yoko-form-group-heading">Ansoff Type</div>
                                                <div class="yoko-form-group-line"></div>
                                              	<button type="button" ng-click="gridAnsoffTypeBtnClick('add')" class="yoko-btn yoko-btn-add"></button>
                                                <button type="button" ng-click="gridAnsoffTypeBtnClick('del')" class="yoko-btn yoko-btn-delete"></button>
                                              	<span> </span>
                                            </div>
                                            <div class="yoko-ht100 yoko-scroll">
                                              	<div id='gridAnsoffType' style="width: 480px; height: 105px;"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="yoko-search-form-wrap yoko-col100">
                                <div class="yoko-search-form yoko-flag-wrap">
                                    <div class="yoko-form-col">
                                        <div class="yoko-form-group-heading-wrap">
                                            <div class="yoko-form-group-heading">Flag</div>
                                            <div class="yoko-form-group-line"></div>
                                        </div>
                                        <div class="yoko-form-group" style="align-items:flex-start">
                                            <div class="yoko-form-col yoko-flex-responsive-row">
                                                <div class="yoko-form-group">
                                                    <label class="checkbox-label">
                                                        <div class="custom-checkbox">
                                                            <input type="checkbox" name='check_1' ng-disabled='c.data.disChkFlag' ng-model='c.data.itemsFlag[0].checked' />
                                                            <span class="checkmark"></span>
                                                        </div>
                                                        {{c.data.itemsFlag[0].name}}
                                                    </label>
                                                </div>
                                                <div class="yoko-form-group">
                                                    <label class="checkbox-label">
                                                        <div class="custom-checkbox">
                                                            <input type="checkbox" name='check_2' ng-disabled='c.data.disChkFlag' ng-model='c.data.itemsFlag[1].checked' />
                                                            <span class="checkmark"></span>
                                                        </div>
                                                        {{c.data.itemsFlag[1].name}}
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="yoko-form-col yoko-flex-responsive-row">
                                                <div class="yoko-form-group">
                                                    <label class="checkbox-label">
                                                        <div class="custom-checkbox">
                                                            <input type="checkbox" name='check_3' ng-disabled='c.data.disChkFlag' ng-model='c.data.itemsFlag[2].checked' />
                                                            <span class="checkmark"></span>
                                                        </div>
                                                        {{c.data.itemsFlag[2].name}}
                                                    </label>
                                                </div>
                                                <div class="yoko-form-group">
                                                    <label class="checkbox-label">
                                                        <div class="custom-checkbox">
                                                            <input type="checkbox" name='check_4' ng-disabled='c.data.disChkFlag' ng-model='c.data.itemsFlag[3].checked' />
                                                            <span class="checkmark"></span>
                                                        </div>
                                                        {{c.data.itemsFlag[3].name}}
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="yoko-form-col">
                                                <div class="yoko-form-group">
                                                    <label class="checkbox-label">
                                                        <div class="custom-checkbox">
                                                            <input type="checkbox" name='check_5' ng-disabled='c.data.disChkFlag' ng-model='c.data.itemsFlag[4].checked' />
                                                            <span class="checkmark"></span>
                                                        </div>
                                                        {{c.data.itemsFlag[4].name}}
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

						<div class="yoko-grid-btn-wrap-grid" style='margin-'>
              <div class="yoko-grid-btn-wrap">
                  <button type="button" id="bt-add"    ng-click='gridDetailBtnClick(1)' class="yoko-btn yoko-btn-add"></button>
                  <button type="button" id="bt-delete" ng-click='gridDetailBtnClick(3)' class="yoko-btn yoko-btn-delete"></button>
              </div>
							<div id='gridContainer' style="width:100%; height: 400px; margin-top:5px;"></div>
            </div>
          
        </div>
    </div>
  
  	<!-- Modal Order type Structure -->
  	<dialog class="modal-dialog" id="modalOrderType">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalOrderType()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >{{c.data.modalOrderTypeTitle}}</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204" 
                         ng-keypress="onModalKeyPressed($event, 'OrderType')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickOrderTypeModalSearch()"></button>
              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 137px">
                <col style="width: 51px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalOrderTypeHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsOrdertype">
                  <td id="clicktd" ng-click="clickOrderType(item)">{{ item.name }}</td>
                  <td>{{ item.code }}</td>
                  <td style="display: none;">{{ item.sysid }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  	<!-- Modal Project type Structure -->
  	<dialog class="modal-dialog" id="modalProjectType">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalProjectType()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >Project Type</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204" 
                         ng-keypress="onModalKeyPressed($event, 'ProjectType')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickProjectTypeSearch()"></button>
              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 51px">
                <col style="width: 137px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalProjectTypeHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsProjecttype">
                  <td id="clicktd" ng-click="clickProjectType(item)">{{ item.name }}</td>
                  <td>{{ item.code }}</td>
                  <td style="display: none;">{{ item.sysid }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  	<!-- Modal Ansoff Structure -->
  	<dialog class="modal-dialog" id="modalAnsoff">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalAnsoff()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >Ansoff Type</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204" 
                         ng-keypress="onModalKeyPressed($event, 'Ansoff')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickAnsoffModalSearch()"></button>
              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 137px">
                <col style="width: 51px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalAnsoffHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsAnsoff">
                  <td id="clicktd" ng-click="clickAnsoff(item)">{{ item.desc }}</td>
                  <td>{{ item.name }}</td>
                  <td style="display: none;">{{ item.sysid }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  	<!-- Modal Vendor Structure -->
  	<dialog class="modal-dialog" id="modalVendor">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalVendor()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >Vendor</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204"
                         ng-keypress="onModalKeyPressed($event, 'Vendor')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickVendorModalSearch()"></button>
              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 137px">
                <col style="width: 51px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalVendorHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsVendor">
                  <td id="clicktd" ng-click="clickVendor(item)">{{ item.name }}</td>
                  <td>{{ item.country }}</td>
                  <td style="display: none;">{{ item.sysid }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  	<!-- Modal WBS Structure -->
  	<dialog class="modal-dialog" id="modalWbs">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalWbs()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >WBS 6</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204" 
                         ng-keypress="onModalKeyPressed($event, 'WBS')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickWbsModalSearch()"></button>
              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 137px">
                <col style="width: 51px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalWbsHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsWbs">
                  <td id="clicktd" ng-click="clickWbs(item)">{{ item.desc }}</td>
                  <td>{{ item.code }}</td>
                  <td style="display: none;">{{ item.sysid }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  	<!-- Modal JOB TYPE -->
    <dialog class="modal-dialog" id="modalJobType">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeDmrClass()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >JobType</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204" 
                         ng-keypress="onModalKeyPressed($event, 'JobType')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickJobModalSearch(1)"></button>
              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 81px">
                <col style="width: 107px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalSOHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsJobType">
                  <td id="clicktd" ng-click="clickDmrClass(item)">{{ item.name }}</td>
                  <td>{{ item.code }}</td>
                  <td style="display: none;">{{ item.sysid }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
    <!-- Modal sales office -->
    <dialog class="modal-dialog" id="modalSalesOffice">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalSalesOffice()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >Sales office</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204"
                         ng-keypress="onModalKeyPressed($event, 'SO')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickSOModalSearch()"></button>

              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 51px">
                <col style="width: 137px">
                <col style="width: auto">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalSOHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsSalesOffice">
                  <td id="clicktd" ng-click="clickModalSO(item)">{{ item.name }}</td>
                  <td>{{ item.muCode }}</td>
                  <td style="display: none;">{{ item.sys_id }}</td>
                  <td style="display: none;">{{ item.muSysid }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  	<!-- Modal End User -->
    <dialog class="modal-dialog" id="modalEndUser">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalEndUser()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >End User</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204" 
                         ng-keypress="onModalKeyPressed($event, 'EndUser')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickEndUserModalSearch()"></button>

              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 81px">
                <col style="width: 107px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalEndUserHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsEndUser">
                  <td id="clicktd" ng-click="clickModalEndUser(item)">{{ item.name }}</td>
                  <td>{{ item.code }}</td>
                  <td style="display: none;">{{ item.sys_id }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  	<!-- Modal Contractor -->
    <dialog class="modal-dialog" id="modalContractor">
      <div class="modal-form-content">
          <div class="modal-search-form">
              <button class="modal-close-button" ng-click="closeModalContractor()">×</button>
              <div class="modal-form-inline">
                  <label class="modal-label" >Contractor</label>
                  <!--<select class="modal-select">
                  <option ng-repeat="item in c.data.modalItems" value ="{{ item.value }}">{{item.text }}</option>
                  </select>-->
                  <input type="text" name="" ng-model="c.data.searchQuery" placeholder="" class="yoko-wid204" 
                         ng-keypress="onModalKeyPressed($event, 'Contractor')">
                  <button type="button" class="yoko-btn yoko-btn-search" ng-click="clickContractorModalSearch()"></button>

              </div>
         </div>
      </div>
      <div class="yoko-table-container">
          <table class="yoko-search-table">
              <colgroup>
                <col style="width: 81px">
                <col style="width: 107px">
                <col style="width: auto">
              </colgroup>
              <thead>
                <tr>
                  <th ng-repeat="item in c.data.modalContractorHeader">{{ item.fieldLabel }}</th>
                </tr>
              </thead>
              <tbody>
                <tr ng-repeat="item in c.data.itemsContractor">
                  <td id="clicktd" ng-click="clickModalContractor(item)">{{ item.name }}</td>
                  <td>{{ item.code }}</td>
                  <td style="display: none;">{{ item.sys_id }}</td>
                </tr>
              </tbody>
          </table>   
      </div>
    </dialog>
  
  <script type= text/javascript>
    $(document).ready(function() {
    	var toggleButtons = document.querySelectorAll(".yoko-btn-fold");
      toggleButtons.forEach(button => {
        button.addEventListener("click", function() {
          var targetId = this.getAttribute("data-target");
          var content = document.getElementById(targetId);
          if (content.style.display === "block" || content.style.display === "") {
            content.style.display = "none";
          } else {
            content.style.display = "block";
          }

          this.classList.toggle("active");
        });
      });
    });
  </script>
</div>

]]></template>
    </sp_widget>
</record_update>
