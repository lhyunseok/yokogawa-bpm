<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.breadcrumb {&#13;
    padding: 0px;&#13;
	background: #D4D4D4;&#13;
	list-style: none; &#13;
	overflow: hidden;&#13;
    margin-top: 20px;&#13;
}&#13;
.breadcrumb&gt;li+li:before {&#13;
	padding: 0;&#13;
}&#13;
.breadcrumb li { &#13;
	float: left; &#13;
}&#13;
.breadcrumb li.active a {&#13;
	background: brown;                   /* fallback color */&#13;
	background: #00A4EF ; &#13;
}&#13;
.breadcrumb li.completed a {&#13;
	background: brown;                   /* fallback color */&#13;
	background: hsla(153, 57%, 51%, 1); &#13;
}&#13;
.breadcrumb li.active a:after {&#13;
	border-left: 30px solid #00A4EF ;&#13;
}&#13;
.breadcrumb li.completed a:after {&#13;
	border-left: 30px solid hsla(153, 57%, 51%, 1);&#13;
} &#13;
&#13;
.breadcrumb li a {&#13;
	color: white;&#13;
	text-decoration: none; &#13;
	padding: 10px 0 10px 45px;&#13;
	position: relative; &#13;
	display: block;&#13;
	float: left;&#13;
}&#13;
.breadcrumb li a:after { &#13;
	content: " "; &#13;
	display: block; &#13;
	width: 0; &#13;
	height: 0;&#13;
	border-top: 50px solid transparent;           /* Go big on the size, and let overflow hide */&#13;
	border-bottom: 50px solid transparent;&#13;
	border-left: 30px solid hsla(0, 0%, 83%, 1);&#13;
	position: absolute;&#13;
	top: 50%;&#13;
	margin-top: -50px; &#13;
	left: 100%;&#13;
	z-index: 2; &#13;
}	&#13;
.breadcrumb li a:before { &#13;
	content: " "; &#13;
	display: block; &#13;
	width: 0; &#13;
	height: 0;&#13;
	border-top: 50px solid transparent;           /* Go big on the size, and let overflow hide */&#13;
	border-bottom: 50px solid transparent;&#13;
	border-left: 30px solid white;&#13;
	position: absolute;&#13;
	top: 50%;&#13;
	margin-top: -50px; &#13;
	margin-left: 1px;&#13;
	left: 100%;&#13;
	z-index: 1; &#13;
}	&#13;
.breadcrumb li:first-child a {&#13;
	padding-left: 15px;&#13;
}&#13;
.breadcrumb li a:hover { background: #ffc107  ; }&#13;
.breadcrumb li a:hover:after { border-left-color: #ffc107   !important; }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>flow_formatter</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>flow formatter</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */
    data.table = $sp.getParameter("table");
    data.id = $sp.getParameter("sys_id");
    var recordGlide = new GlideRecord(data.table);
    if (recordGlide.get(data.id)) {
        var stepArray = [];
        var stepGlide = new GlideRecord("sys_process_flow");
        stepGlide.addEncodedQuery("table=" + data.table);
        stepGlide.addQuery('active', true);
        stepGlide.orderBy("order");
        stepGlide.query();
        var activeStep = false;
        var stepCounter = 0;
        while (stepGlide.next()) {
            stepCounter = stepCounter + 1;
            var stepObj = {};
            stepObj.order = "step" + stepCounter;
            stepObj.id = stepGlide.sys_id.toString();
            stepObj.label = stepGlide.label.toString();
            stepObj.name = stepGlide.name.toString();
            var found = GlideFilter.checkRecord(recordGlide, stepGlide.condition.toString());
            if (found && !activeStep) {
                stepObj.status = "active";
                activeStep = found;
            } else if (!found && activeStep) {
                stepObj.status = "waiting";
            } else {
                stepObj.status = "completed";
            }
            stepArray.push(stepObj);
        }
        data.setpDetails = stepArray;

    }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>hhkim</sys_created_by>
        <sys_created_on>2024-06-13 06:21:52</sys_created_on>
        <sys_id>ed78ddc547320650d254bce5536d43f0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>flow formatter</sys_name>
        <sys_package display_value="BPM" source="x_yergb_bpm">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_package>
        <sys_policy/>
        <sys_scope display_value="BPM">41c8a9e73b1e4a10ec3cbf2a85e45ab7</sys_scope>
        <sys_update_name>sp_widget_ed78ddc547320650d254bce5536d43f0</sys_update_name>
        <sys_updated_by>hhkim</sys_updated_by>
        <sys_updated_on>2024-06-13 06:21:52</sys_updated_on>
        <template><![CDATA[<div class="container">
	<div class="row">
		<ul class="breadcrumb">
			<li ng-repeat="steps in data.setpDetails" class="{{steps.status}}"><a href="javascript:void(0);">{{steps.label}}</a></li>
		</ul>
	</div>
</div>]]></template>
    </sp_widget>
</record_update>
